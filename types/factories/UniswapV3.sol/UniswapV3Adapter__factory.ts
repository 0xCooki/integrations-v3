/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV3Adapter,
  UniswapV3AdapterInterface,
} from "../../UniswapV3.sol/UniswapV3Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_connectorTokensInit",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPathException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyConnectorsException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken3",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken4",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken5",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken6",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken7",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken8",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rateMinRAY",
            type: "uint256",
          },
        ],
        internalType: "struct IUniswapV3Adapter.ExactAllInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactAllInput",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rateMinRAY",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct IUniswapV3Adapter.ExactAllInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactAllInputSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInput",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOutMinimum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactInputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactInputSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "path",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutput",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountInMaximum",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "sqrtPriceLimitX96",
            type: "uint160",
          },
        ],
        internalType: "struct ISwapRouter.ExactOutputSingleParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "exactOutputSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getConnectors",
    outputs: [
      {
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isConnector",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConnectors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6102606040523480156200001257600080fd5b5060405162002ee838038062002ee883398101604081905262000035916200034c565b8083836001600160a01b03821615806200005657506001600160a01b038116155b156200007557604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e691906200044c565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014a91906200044c565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c291906200044c565b6001600160a01b031660e05250508051610240819052600a1015620001fa57604051631410bf9560e21b815260040160405180910390fd5b62000204620002ec565b60005b610240518110156200026b5782818151811062000228576200022862000473565b60200260200101518282600a811062000245576200024562000473565b6001600160a01b039092166020929092020152620002638162000489565b905062000207565b5080516001600160a01b039081166101009081526020830151821661012090815260408401518316610140526060840151831661016052608084015183166101805260a084015183166101a05260c084015183166101c05260e084015183166101e0529083015182166102005290910151166102205250620004b192505050565b604051806101400160405280600a906020820280368337509192915050565b6001600160a01b03811681146200032157600080fd5b50565b805162000331816200030b565b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200036257600080fd5b83516200036f816200030b565b8093505060208085015162000384816200030b565b60408601519093506001600160401b0380821115620003a257600080fd5b818701915087601f830112620003b757600080fd5b815181811115620003cc57620003cc62000336565b8060051b604051601f19603f83011681018181108582111715620003f457620003f462000336565b60405291825284820192508381018501918a8311156200041357600080fd5b938501935b828510156200043c576200042c8562000324565b8452938501939285019262000418565b8096505050505050509250925092565b6000602082840312156200045f57600080fd5b81516200046c816200030b565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004aa57634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e0516102005161022051610240516128b96200062f600039600081816103200152610b8a0152600081816101ad01528181610969015261102e015260008181610483015281816109130152610fb601526000818161041f015281816108bd0152610f3e0152600081816102d2015281816108670152610ec60152600081816102f9015281816108110152610e4e015260008181610288015281816107bb0152610dd601526000818161024c015281816107650152610d5e0152600081816103970152818161070f0152610ce60152600081816104bd015281816106b90152610c6e0152600081816101fe015281816106640152610bf6015260006103700152600081816103be01528181611cce0152611e3d015260006102250152600081816103f801528181611964015281816119fa01528181611c4101528181611df901528181611ee20152611fc101526128b96000f3fe608060405234801561001057600080fd5b50600436106101a35760003560e01c8063b96bc265116100ee578063c7fbf4de11610097578063db3e219811610071578063db3e2198146104a5578063f236ea0f146104b8578063f28c0498146104df578063f4f18d90146104f257600080fd5b8063c7fbf4de14610456578063ce30bbdb14610469578063d2ceed8d1461047e57600080fd5b8063c12c21c0116100c8578063c12c21c0146103f3578063c4ea156d1461041a578063c74eaa111461044157600080fd5b8063b96bc26514610392578063bd90df70146103b9578063c04b8d59146103e057600080fd5b806347f37d1d1161015057806367015b4c1161012a57806367015b4c1461031b57806378aa73a414610350578063a50cf2c81461036b57600080fd5b806347f37d1d146102aa57806357dcfca4146102cd57806362fe4283146102f457600080fd5b80633f01665c116101815780633f01665c14610247578063414bf3891461026e578063427b608d1461028357600080fd5b8063017eab50146101a857806304711e2c146101f95780632954018c14610220575b600080fd5b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b61028161027c36600461209e565b610505565b005b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6102bd6102b83660046120f4565b610660565b60405190151581526020016101f0565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6103427f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101f0565b610358600381565b60405161ffff90911681526020016101f0565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6102816103ee366004612123565b6109bd565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b610449610b86565b6040516101f09190612158565b6102816104643660046121b2565b61109f565b610471600281565b6040516101f091906121c4565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6102816104b336600461209e565b6113a4565b6101cf7f000000000000000000000000000000000000000000000000000000000000000081565b6102816104ed366004612123565b6114f9565b610281610500366004612205565b61167f565b61050d611960565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610571576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061057b6119f6565b9050600061058e368490038401846123b2565b73ffffffffffffffffffffffffffffffffffffffff83166060820152905061065a6105bc60208501856120f4565b6105cc60408601602087016120f4565b836040516024016105dd91906123cf565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f414bf389000000000000000000000000000000000000000000000000000000001790526000611aa5565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061070757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061075d57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806107b357507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061080957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061085f57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806108b557507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061090b57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061096157507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806109b757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6109c5611960565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a29576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a336119f6565b905060008080610a80610a46868061244a565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611af292505050565b92509250925082610abd576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ac8866125b1565b73ffffffffffffffffffffffffffffffffffffffff86166020820152604051909150610b7d9084908490610b0090859060240161268a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc04b8d59000000000000000000000000000000000000000000000000000000001790526000611aa5565b50505050505050565b60607f00000000000000000000000000000000000000000000000000000000000000008067ffffffffffffffff811115610bc257610bc2612240565b604051908082528060200260200182016040528015610beb578160200160208202803683370190505b5091508015610c63577f000000000000000000000000000000000000000000000000000000000000000082600081518110610c2857610c2861269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6001811115610cdb577f000000000000000000000000000000000000000000000000000000000000000082600181518110610ca057610ca061269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6002811115610d53577f000000000000000000000000000000000000000000000000000000000000000082600281518110610d1857610d1861269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6003811115610dcb577f000000000000000000000000000000000000000000000000000000000000000082600381518110610d9057610d9061269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6004811115610e43577f000000000000000000000000000000000000000000000000000000000000000082600481518110610e0857610e0861269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6005811115610ebb577f000000000000000000000000000000000000000000000000000000000000000082600581518110610e8057610e8061269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6006811115610f33577f000000000000000000000000000000000000000000000000000000000000000082600681518110610ef857610ef861269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6007811115610fab577f000000000000000000000000000000000000000000000000000000000000000082600781518110610f7057610f7061269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6008811115611023577f000000000000000000000000000000000000000000000000000000000000000082600881518110610fe857610fe861269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b600981111561109b577f0000000000000000000000000000000000000000000000000000000000000000826009815181106110605761106061269d565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5090565b6110a7611960565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461110b576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111156119f6565b9050600061112660208401846120f4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015291909116906370a0823190602401602060405180830381865afa158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b891906126cc565b9050600181116111c757505050565b6040805161010081019091527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909101906000908061120960208701876120f4565b73ffffffffffffffffffffffffffffffffffffffff16815260200185602001602081019061123791906120f4565b73ffffffffffffffffffffffffffffffffffffffff16815260200161126260608701604088016126e5565b62ffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001856060013581526020018381526020016b033b2e3c9fd0803ce80000008660800135856112b5919061272f565b6112bf9190612746565b81526020016112d460c0870160a088016120f4565b73ffffffffffffffffffffffffffffffffffffffff169052905061139c6112fe60208601866120f4565b61130e60408701602088016120f4565b8360405160240161131f91906123cf565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f414bf389000000000000000000000000000000000000000000000000000000001790526001611aa5565b505050505b50565b6113ac611960565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611410576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061141a6119f6565b9050600061142d368490038401846123b2565b73ffffffffffffffffffffffffffffffffffffffff83166060820152905061065a61145b60208501856120f4565b61146b60408601602087016120f4565b8360405160240161147c91906123cf565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdb3e2198000000000000000000000000000000000000000000000000000000001790526000611aa5565b611501611960565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611565576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061156f6119f6565b905060008080611582610a46868061244a565b925092509250826115bf576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006115ca866125b1565b73ffffffffffffffffffffffffffffffffffffffff86166020820152604051909150610b7d908390859061160290859060240161268a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff28c0498000000000000000000000000000000000000000000000000000000001790526000611aa5565b611687611960565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146116eb576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116f56119f6565b905060008080611708610a46868061244a565b92509250925082611745576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152600091908416906370a0823190602401602060405180830381865afa1580156117b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d991906126cc565b9050600181116117eb57505050505050565b6040805160a081019091527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091019060009080611829898061244a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525073ffffffffffffffffffffffffffffffffffffffff8816602080830191909152890135604080830191909152606082018590526080909101906b033b2e3c9fd0803ce8000000906118b4908b01358661272f565b6118be9190612746565b81525090506119568484836040516024016118d9919061268a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc04b8d59000000000000000000000000000000000000000000000000000000001790526001611aa5565b5050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f19190612781565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b704611a3c611960565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156119cd573d6000803e3d6000fd5b6060611ad1857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611c3f565b611add85858585611d3c565b9050611aea856001611c3f565b949350505050565b8051600090819081906003611b096014600261272f565b611b13919061279e565b8103611b48576001611b26866000611d61565b611b3c611b356003601461279e565b8890611d61565b93509350935050611c38565b611b546003600261272f565b611b606014600361272f565b611b6a919061279e565b8103611bb157611b896102b8611b826003601461279e565b8790611d61565b935083611b97866000611d61565b611b3c611ba66003601461279e565b611b3590600261272f565b611bbc60038061272f565b611bc86014600461272f565b611bd2919061279e565b8103611c3657611bea6102b8611b826003601461279e565b8015611c0e5750611c0e6102b8611c036003601461279e565b611b8290600261272f565b935083611c1c866000611d61565b611b3c611c2b6003601461279e565b611b3590600361272f565b505b9193909250565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d611c83611960565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b158015611d2057600080fd5b505af1158015611d34573d6000803e3d6000fd5b505050505050565b6060611d4783611df5565b90508115611d5857611d5885611ee0565b611aea84611fbf565b6000611d6e82601461279e565b83511015611ddc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e64730000000000000000000000604482015260640160405180910390fd5b5001602001516c01000000000000000000000000900490565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a611e3b611960565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401611e7b939291906127b1565b6000604051808303816000875af1158015611e9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109b791908101906127f3565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630d8f9cee611f246119f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff918216600482015290841660248201526044016020604051808303816000875af1158015611f97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbb9190612861565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f1606120036119f6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201529084166024820152604401600060405180830381600087803b15801561207157600080fd5b505af115801561139c573d6000803e3d6000fd5b6000610100828403121561209857600080fd5b50919050565b600061010082840312156120b157600080fd5b6120bb8383612085565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff811681146113a157600080fd5b80356120ef816120c2565b919050565b60006020828403121561210657600080fd5b81356120bb816120c2565b600060a0828403121561209857600080fd5b60006020828403121561213557600080fd5b813567ffffffffffffffff81111561214c57600080fd5b611aea84828501612111565b6020808252825182820181905260009190848201906040850190845b818110156121a657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101612174565b50909695505050505050565b600060c0828403121561209857600080fd5b60208101601583106121ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561221757600080fd5b813567ffffffffffffffff81111561222e57600080fd5b8201606081850312156120bb57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561229257612292612240565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156122df576122df612240565b604052919050565b803562ffffff811681146120ef57600080fd5b600061010080838503121561230e57600080fd5b6040519081019067ffffffffffffffff8211818310171561233157612331612240565b8160405280925083359150612345826120c2565b818152612354602085016120e4565b6020820152612365604085016122e7565b6040820152612376606085016120e4565b60608201526080840135608082015260a084013560a082015260c084013560c08201526123a560e085016120e4565b60e0820152505092915050565b600061010082840312156123c557600080fd5b6120bb83836122fa565b61010081016109b7828473ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015262ffffff60408301511660408401528060608301511660608401526080820151608084015260a082015160a084015260c082015160c08401528060e08301511660e0840152505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261247f57600080fd5b83018035915067ffffffffffffffff82111561249a57600080fd5b6020019150368190038213156124af57600080fd5b9250929050565b600067ffffffffffffffff8211156124d0576124d0612240565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060a0828403121561250e57600080fd5b61251661226f565b9050813567ffffffffffffffff81111561252f57600080fd5b8201601f8101841361254057600080fd5b80356020612555612550836124b6565b612298565b828152868284860101111561256957600080fd5b8282850183830137600081840183015284526125868582016120e4565b8185015250505060408201356040820152606082013560608201526080820135608082015292915050565b60006109b736836124fc565b60005b838110156125d85781810151838201526020016125c0565b50506000910152565b600081518084526125f98160208601602086016125bd565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000815160a0845261264060a08501826125e1565b905073ffffffffffffffffffffffffffffffffffffffff60208401511660208501526040830151604085015260608301516060850152608083015160808501528091505092915050565b6020815260006120bb602083018461262b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156126de57600080fd5b5051919050565b6000602082840312156126f757600080fd5b6120bb826122e7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176109b7576109b7612700565b60008261277c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561279357600080fd5b81516120bb816120c2565b808201808211156109b7576109b7612700565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526127ea60608301846125e1565b95945050505050565b60006020828403121561280557600080fd5b815167ffffffffffffffff81111561281c57600080fd5b8201601f8101841361282d57600080fd5b805161283b612550826124b6565b81815285602083850101111561285057600080fd5b6127ea8260208301602086016125bd565b60006020828403121561287357600080fd5b815180151581146120bb57600080fdfea26469706673582212200e6fada019e36a34947fd5b843399e4a67c0ee6e40974e67526d25c2f2fa113464736f6c63430008110033";

type UniswapV3AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV3AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV3Adapter__factory extends ContractFactory {
  constructor(...args: UniswapV3AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV3Adapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _connectorTokensInit: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV3Adapter> {
    return super.deploy(
      _creditManager,
      _router,
      _connectorTokensInit,
      overrides || {}
    ) as Promise<UniswapV3Adapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _connectorTokensInit: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _creditManager,
      _router,
      _connectorTokensInit,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV3Adapter {
    return super.attach(address) as UniswapV3Adapter;
  }
  override connect(signer: Signer): UniswapV3Adapter__factory {
    return super.connect(signer) as UniswapV3Adapter__factory;
  }
  static readonly contractName: "UniswapV3Adapter";

  public readonly contractName: "UniswapV3Adapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV3AdapterInterface {
    return new utils.Interface(_abi) as UniswapV3AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV3Adapter {
    return new Contract(address, _abi, signerOrProvider) as UniswapV3Adapter;
  }
}
