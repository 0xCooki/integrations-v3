/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ConvexV1BoosterAdapter,
  ConvexV1BoosterAdapterInterface,
} from "../../ConvexV1_Booster.sol/ConvexV1BoosterAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_booster",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_stake",
        type: "bool",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_stake",
        type: "bool",
      },
    ],
    name: "depositAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pidToPhantomToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateStakedPhantomTokensMap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001a5638038062001a568339810160408190526200003591620001f1565b81816001600160a01b03821615806200005557506001600160a01b038116155b156200007457604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e5919062000230565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000149919062000230565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c1919062000230565b6001600160a01b031660e052506200025792505050565b6001600160a01b0381168114620001ee57600080fd5b50565b600080604083850312156200020557600080fd5b82516200021281620001d8565b60208401519092506200022581620001d8565b809150509250929050565b6000602082840312156200024357600080fd5b81516200025081620001d8565b9392505050565b60805160a05160c05160e051611763620002f3600039600081816101d601526105510152600081816101fd01528181610ab001528181610bb601528181610d530152610f240152600061013e0152600081816102240152818161060b015281816107a7015281816109ec01528181610cc601528181610e2e01528181610ee001528181610fcf015281816110aa015261117901526117636000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063958e2d3111610081578063bd90df701161005b578063bd90df70146101f8578063c12c21c01461021f578063ce30bbdb1461024657600080fd5b8063958e2d31146101b65780639b51ecd3146101c9578063a50cf2c8146101d157600080fd5b8063441a3e70116100b2578063441a3e701461017557806360759fce1461018857806378aa73a41461019b57600080fd5b8063251d48c0146100d95780632954018c1461013957806343a0d06614610160575b600080fd5b61010f6100e7366004611224565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b61017361016e36600461124b565b61025b565b005b610173610183366004611284565b61030e565b6101736101963660046112a6565b6103bf565b6101a3600281565b60405161ffff9091168152602001610130565b6101736101c4366004611224565b610470565b610173610523565b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b61024e600b81565b6040516101309190611305565b6102636109e8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c7576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030983826000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610a7e915050565b505050565b6103166109e8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461037a576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103bb826000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509250610b84915050565b5050565b6103c76109e8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042b576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103bb82826000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610a7e915050565b6104786109e8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104dc576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610520816000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610b84915050565b50565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa1580156105ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d19190611346565b610607576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f9aa028a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610698919061138e565b905060008173ffffffffffffffffffffffffffffffffffffffff1663373c8f626040518163ffffffff1660e01b8152600401600060405180830381865afa1580156106e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261072d9190810190611427565b805190915060005b818110156109e2576000838281518110610751576107516114d4565b60209081029190910101516040517ffdd5764500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f0000000000000000000000000000000000000000000000000000000000000000169063fdd5764590602401602060405180830381865afa1580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610812919061138e565b905060008173ffffffffffffffffffffffffffffffffffffffff1663ce30bbdb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108859190611503565b9050600a81601481111561089b5761089b6112d6565b036109d45760008373ffffffffffffffffffffffffffffffffffffffff1663f10684546040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190611524565b90508273ffffffffffffffffffffffffffffffffffffffff166320b2c1516040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610982919061138e565b60009182526020829052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790555b836001019350505050610735565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a79919061138e565b905090565b6040517f1526fe27000000000000000000000000000000000000000000000000000000008152600481018590526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631526fe279060240160c060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b30919061153d565b8051909150600085610b46578260200151610b6c565b60008781526020819052604090205473ffffffffffffffffffffffffffffffffffffffff165b9050610b7a82828787610c56565b5050505050505050565b6040517f1526fe27000000000000000000000000000000000000000000000000000000008152600481018490526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690631526fe279060240160c060405180830381865afa158015610c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c36919061153d565b6020810151815191925090610c4d82828787610ca3565b50505050505050565b6060610c82857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610cc4565b610c8e85858585610dc1565b9050610c9b856001610cc4565b949350505050565b6060610cae85610de6565b50610cbb85858585610dc1565b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d610d086109e8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b158015610da557600080fd5b505af1158015610db9573d6000803e3d6000fd5b505050505050565b6060610dcc83610edc565b90508115610ddd57610ddd85610fcd565b610c9b846110a8565b6040517ff67c5bd000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063f67c5bd090602401602060405180830381865afa158015610e77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9b9190611524565b905080600003610ed7576040517f700ca0af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a610f226109e8565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401610f6293929190611602565b6000604051808303816000875af1158015610f81573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fc7919081019061167b565b92915050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630d8f9cee611011611175565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff918216600482015290841660248201526044016020604051808303816000875af1158015611084573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bb9190611346565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f1606110ec611175565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201529084166024820152604401600060405180830381600087803b15801561115a57600080fd5b505af115801561116e573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b7046111bb6109e8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa158015610a55573d6000803e3d6000fd5b60006020828403121561123657600080fd5b5035919050565b801515811461052057600080fd5b60008060006060848603121561126057600080fd5b833592506020840135915060408401356112798161123d565b809150509250925092565b6000806040838503121561129757600080fd5b50508035926020909101359150565b600080604083850312156112b957600080fd5b8235915060208301356112cb8161123d565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160158310611340577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60006020828403121561135857600080fd5b81516113638161123d565b9392505050565b805173ffffffffffffffffffffffffffffffffffffffff81168114610ed757600080fd5b6000602082840312156113a057600080fd5b6113638261136a565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561141f5761141f6113a9565b604052919050565b6000602080838503121561143a57600080fd5b825167ffffffffffffffff8082111561145257600080fd5b818501915085601f83011261146657600080fd5b815181811115611478576114786113a9565b8060051b91506114898483016113d8565b81815291830184019184810190888411156114a357600080fd5b938501935b838510156114c8576114b98561136a565b825293850193908501906114a8565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561151557600080fd5b81516015811061136357600080fd5b60006020828403121561153657600080fd5b5051919050565b600060c0828403121561154f57600080fd5b60405160c0810181811067ffffffffffffffff82111715611572576115726113a9565b60405261157e8361136a565b815261158c6020840161136a565b602082015261159d6040840161136a565b60408201526115ae6060840161136a565b60608201526115bf6080840161136a565b608082015260a08301516115d28161123d565b60a08201529392505050565b60005b838110156115f95781810151838201526020016115e1565b50506000910152565b600073ffffffffffffffffffffffffffffffffffffffff80861683528085166020840152506060604083015282518060608401526116478160808501602087016115de565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b60006020828403121561168d57600080fd5b815167ffffffffffffffff808211156116a557600080fd5b818401915084601f8301126116b957600080fd5b8151818111156116cb576116cb6113a9565b6116fc60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016113d8565b915080825285602082850101111561171357600080fd5b6117248160208401602086016115de565b5094935050505056fea264697066735822122001097fec5fa117fe27bae05e57ce9600f71fcd02d83805eb7f811d8836a085fb64736f6c63430008110033";

type ConvexV1BoosterAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConvexV1BoosterAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConvexV1BoosterAdapter__factory extends ContractFactory {
  constructor(...args: ConvexV1BoosterAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ConvexV1BoosterAdapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConvexV1BoosterAdapter> {
    return super.deploy(
      _creditManager,
      _booster,
      overrides || {}
    ) as Promise<ConvexV1BoosterAdapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _booster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _creditManager,
      _booster,
      overrides || {}
    );
  }
  override attach(address: string): ConvexV1BoosterAdapter {
    return super.attach(address) as ConvexV1BoosterAdapter;
  }
  override connect(signer: Signer): ConvexV1BoosterAdapter__factory {
    return super.connect(signer) as ConvexV1BoosterAdapter__factory;
  }
  static readonly contractName: "ConvexV1BoosterAdapter";

  public readonly contractName: "ConvexV1BoosterAdapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvexV1BoosterAdapterInterface {
    return new utils.Interface(_abi) as ConvexV1BoosterAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvexV1BoosterAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConvexV1BoosterAdapter;
  }
}
