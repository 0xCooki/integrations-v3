/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BaseRewardPoolMock,
  BaseRewardPoolMockInterface,
} from "../../ConvexBaseRewardPoolMock.sol/BaseRewardPoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_reward",
        type: "address",
      },
    ],
    name: "addExtraReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clearExtraRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "donate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "extraRewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "extraRewardsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_claimExtras",
        type: "bool",
      },
    ],
    name: "getReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "historicalRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newRewardRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "queueNewRewards",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "queuedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract ERC20Mock",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakeAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_for",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stakeFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
    ],
    name: "withdrawAllAndUnwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claim",
        type: "bool",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600080546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17815560068190556007819055600a819055600b819055600c81905560128190556013553480156200005857600080fd5b5060405162001dbe38038062001dbe8339810160408190526200007b91620000e1565b600593909355600280546001600160a01b03199081166001600160a01b039485161790915560018054821692841692909217909155600380549091169190921617905562000135565b80516001600160a01b0381168114620000dc57600080fd5b919050565b60008060008060808587031215620000f857600080fd5b845193506200010a60208601620000c4565b92506200011a60408601620000c4565b91506200012a60608601620000c4565b905092959194509250565b611c7980620001456000396000f3fe608060405234801561001057600080fd5b50600436106102765760003560e01c80637050ccd911610160578063a694fc3a116100d8578063df136d651161008c578063f106845411610071578063f10684541461050a578063f14faf6f146103c2578063f7c618c11461051357600080fd5b8063df136d65146104f8578063ebe2b12b1461050157600080fd5b8063c8f33c91116100bd578063c8f33c91146104df578063cd3daf9d146104e8578063d55a23f4146104f057600080fd5b8063a694fc3a146104b9578063c32e7202146104cc57600080fd5b806380faa57d1161012f5780638dcb4061116101145780638dcb406114610495578063901a7d531461049d5780639b7ccf4c146104a657600080fd5b806380faa57d1461046d5780638b8763471461047557600080fd5b80637050ccd9146103fb57806370a082311461040e57806372f702f3146104445780637b0a47ee1461046457600080fd5b806338d07436116101f3578063570ca735116101c25780635e43c47b116101a75780635e43c47b146103d657806363d38c3b146103e95780636c8bcee8146103f257600080fd5b8063570ca735146103a2578063590a41f5146103c257600080fd5b806338d07436146103615780633d18b9121461037457806340c354461461037c57806349f039a21461038f57600080fd5b80630fb5a6b41161024a5780631c1c6fe51161022f5780631c1c6fe514610322578063262d3d6d146103355780632ee409081461033e57600080fd5b80630fb5a6b41461031057806318160ddd1461031a57600080fd5b80628cc2621461027b5780630569d388146102a15780630700037d146102ab5780630f4ef8a6146102cb575b600080fd5b61028e610289366004611966565b610533565b6040519081526020015b60405180910390f35b6102a96105cc565b005b61028e6102b9366004611966565b600f6020526000908152604090205481565b6004546102eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610298565b61028e62093a8081565b600d5461028e565b6102a9610330366004611991565b6105da565b61028e600c5481565b61035161034c3660046119ae565b6105f8565b6040519015158152602001610298565b61035161036f3660046119da565b61082d565b610351610a31565b6102eb61038a366004611a0a565b610a46565b6102a961039d366004611991565b610a7d565b6003546102eb9073ffffffffffffffffffffffffffffffffffffffff1681565b6103516103d0366004611a0a565b50600190565b6103516103e4366004611966565b610a97565b61028e600a5481565b61028e61033e81565b610351610409366004611a23565b610b91565b61028e61041c366004611966565b73ffffffffffffffffffffffffffffffffffffffff1660009081526010602052604090205490565b6002546102eb9073ffffffffffffffffffffffffffffffffffffffff1681565b61028e60075481565b61028e610dbf565b61028e610483366004611966565b600e6020526000908152604090205481565b610351610dd2565b61028e600b5481565b6102a96104b4366004611a0a565b610e7d565b6103516104c7366004611a0a565b611076565b6103516104da3660046119da565b611277565b61028e60085481565b60095461028e565b60115461028e565b61028e60095481565b61028e60065481565b61028e60055481565b6001546102eb9073ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600f6020908152604080832054600e9092528220546105c691906105c090670de0b6b3a7640000906105ba9061058e9061058860095490565b9061146d565b73ffffffffffffffffffffffffffffffffffffffff881660009081526010602052604090205490611480565b9061148c565b90611498565b92915050565b6105d860116000611912565b565b336000908152601060205260409020546105f4908261082d565b5050565b60008273ffffffffffffffffffffffffffffffffffffffff8116156106595761062081610533565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f6020908152604080832093909355600954600e909152919020555b600083116106c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f526577617264506f6f6c203a2043616e6e6f74207374616b652030000000000060448201526064015b60405180910390fd5b60005b60115481101561079057601181815481106106e8576106e8611a51565b6000918252602090912001546040517fadc9772e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152602482018790529091169063adc9772e90604401600060405180830381600087803b15801561076557600080fd5b505af1158015610779573d6000803e3d6000fd5b50505050808061078890611aaf565b9150506106cb565b50600d5461079e9084611498565b600d5573ffffffffffffffffffffffffffffffffffffffff84166000908152601060205260409020546107d19084611498565b73ffffffffffffffffffffffffffffffffffffffff80861660009081526010602052604090209190915560025461080b91163330866114a4565b60016013600082825461081e9190611ae7565b90915550600195945050505050565b60003380156108785761083f81610533565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f6020908152604080832093909355600954600e909152919020555b600084116108e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f526577617264506f6f6c203a2043616e6e6f742077697468647261772030000060448201526064016106bf565b60005b6011548110156109a8576011818154811061090257610902611a51565b6000918252602090912001546040517ff3fef3a30000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff9091169063f3fef3a390604401600060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b5050505080806109a090611aaf565b9150506108e5565b50600d546109b6908561146d565b600d55336000908152601060205260409020546109d3908561146d565b33600081815260106020526040902091909155600254610a0c9173ffffffffffffffffffffffffffffffffffffffff9091169086611586565b821561080b57610a1d336001610b91565b5060016013600082825461081e9190611ae7565b6000610a3e336001610b91565b506001905090565b60118181548110610a5657600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b336000908152601060205260409020546105f49082611277565b600073ffffffffffffffffffffffffffffffffffffffff8216610b16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f217265776172642073657474696e67000000000000000000000000000000000060448201526064016106bf565b5060118054600180820183556000929092527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c680180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff939093169290921790915590565b60008273ffffffffffffffffffffffffffffffffffffffff811615610bf257610bb981610533565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f6020908152604080832093909355600954600e909152919020555b6000610bfd85610533565b90508015610cd35773ffffffffffffffffffffffffffffffffffffffff8086166000908152600f6020526040812055600154610c3b91168683611586565b6003546005546040517f71192b17000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff878116602483015260448201849052909116906371192b1790606401600060405180830381600087803b158015610cba57600080fd5b505af1158015610cce573d6000803e3d6000fd5b505050505b8315610d9c5760005b601154811015610d9a5760118181548110610cf957610cf9611a51565b6000918252602090912001546040517fc00007b000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301529091169063c00007b090602401600060405180830381600087803b158015610d6f57600080fd5b505af1158015610d83573d6000803e3d6000fd5b505050508080610d9290611aaf565b915050610cdc565b505b600160136000828254610daf9190611ae7565b9091555060019695505050505050565b6000610dcd426006546115e1565b905090565b6002546040517f70a08231000000000000000000000000000000000000000000000000000000008152336004820152600091829173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa158015610e45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e699190611afa565b9050610e7481611076565b50600191505090565b600054600154604080517f07546172000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9384169363ca669fa793169163075461729160048083019260209291908290030181865afa158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190611b13565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b158015610f8157600080fd5b505af1158015610f95573d6000803e3d6000fd5b50506001546040517f40c10f190000000000000000000000000000000000000000000000000000000081523060048201526024810185905273ffffffffffffffffffffffffffffffffffffffff90911692506340c10f1991506044016020604051808303816000875af1158015611010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110349190611b30565b50600d541561107357600d5461105282670de0b6b3a7640000611b4d565b61105c9190611b64565b6009600082825461106d9190611ae7565b90915550505b50565b60003380156110c15761108881610533565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f6020908152604080832093909355600954600e909152919020555b6000831161112b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f526577617264506f6f6c203a2043616e6e6f74207374616b652030000000000060448201526064016106bf565b60005b6011548110156111f1576011818154811061114b5761114b611a51565b6000918252602090912001546040517fadc9772e0000000000000000000000000000000000000000000000000000000081523360048201526024810186905273ffffffffffffffffffffffffffffffffffffffff9091169063adc9772e90604401600060405180830381600087803b1580156111c657600080fd5b505af11580156111da573d6000803e3d6000fd5b5050505080806111e990611aaf565b91505061112e565b50600d546111ff9084611498565b600d553360009081526010602052604090205461121c9084611498565b336000818152601060205260409020919091556002546112569173ffffffffffffffffffffffffffffffffffffffff9091169030866114a4565b6001601360008282546112699190611ae7565b909155506001949350505050565b60003380156112c25761128981610533565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f6020908152604080832093909355600954600e909152919020555b60005b60115481101561138857601181815481106112e2576112e2611a51565b6000918252602090912001546040517ff3fef3a30000000000000000000000000000000000000000000000000000000081523360048201526024810187905273ffffffffffffffffffffffffffffffffffffffff9091169063f3fef3a390604401600060405180830381600087803b15801561135d57600080fd5b505af1158015611371573d6000803e3d6000fd5b50505050808061138090611aaf565b9150506112c5565b50600d54611396908561146d565b600d55336000908152601060205260409020546113b3908561146d565b33600081815260106020526040908190209290925560035460055492517f14cd70e4000000000000000000000000000000000000000000000000000000008152600481019390935260248301879052604483019190915273ffffffffffffffffffffffffffffffffffffffff16906314cd70e490606401600060405180830381600087803b15801561144457600080fd5b505af1158015611458573d6000803e3d6000fd5b50505050821561080b57610a1d336001610b91565b60006114798284611b9f565b9392505050565b60006114798284611b4d565b60006114798284611b64565b60006114798284611ae7565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526115809085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526115f7565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526115dc9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016114fe565b505050565b60008183106115f05781611479565b5090919050565b6000611659826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117039092919063ffffffff16565b8051909150156115dc57808060200190518101906116779190611b30565b6115dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016106bf565b6060611712848460008561171a565b949350505050565b6060824710156117ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016106bf565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516117d59190611bd6565b60006040518083038185875af1925050503d8060008114611812576040519150601f19603f3d011682016040523d82523d6000602084013e611817565b606091505b509150915061182887838387611833565b979650505050505050565b606083156118c95782516000036118c25773ffffffffffffffffffffffffffffffffffffffff85163b6118c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106bf565b5081611712565b61171283838151156118de5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf9190611bf2565b508054600082559060005260206000209081019061107391905b80821115611940576000815560010161192c565b5090565b73ffffffffffffffffffffffffffffffffffffffff8116811461107357600080fd5b60006020828403121561197857600080fd5b813561147981611944565b801515811461107357600080fd5b6000602082840312156119a357600080fd5b813561147981611983565b600080604083850312156119c157600080fd5b82356119cc81611944565b946020939093013593505050565b600080604083850312156119ed57600080fd5b8235915060208301356119ff81611983565b809150509250929050565b600060208284031215611a1c57600080fd5b5035919050565b60008060408385031215611a3657600080fd5b8235611a4181611944565b915060208301356119ff81611983565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ae057611ae0611a80565b5060010190565b808201808211156105c6576105c6611a80565b600060208284031215611b0c57600080fd5b5051919050565b600060208284031215611b2557600080fd5b815161147981611944565b600060208284031215611b4257600080fd5b815161147981611983565b80820281158282048414176105c6576105c6611a80565b600082611b9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b818103818111156105c6576105c6611a80565b60005b83811015611bcd578181015183820152602001611bb5565b50506000910152565b60008251611be8818460208701611bb2565b9190910192915050565b6020815260008251806020840152611c11816040850160208701611bb2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea26469706673582212209a927333e5a7adc9d47cdbd9cb3206b09e4fb17319e8538ed297caee3690231664736f6c63430008110033";

type BaseRewardPoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseRewardPoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseRewardPoolMock__factory extends ContractFactory {
  constructor(...args: BaseRewardPoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BaseRewardPoolMock";
  }

  override deploy(
    pid_: PromiseOrValue<BigNumberish>,
    stakingToken_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    operator_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseRewardPoolMock> {
    return super.deploy(
      pid_,
      stakingToken_,
      rewardToken_,
      operator_,
      overrides || {}
    ) as Promise<BaseRewardPoolMock>;
  }
  override getDeployTransaction(
    pid_: PromiseOrValue<BigNumberish>,
    stakingToken_: PromiseOrValue<string>,
    rewardToken_: PromiseOrValue<string>,
    operator_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pid_,
      stakingToken_,
      rewardToken_,
      operator_,
      overrides || {}
    );
  }
  override attach(address: string): BaseRewardPoolMock {
    return super.attach(address) as BaseRewardPoolMock;
  }
  override connect(signer: Signer): BaseRewardPoolMock__factory {
    return super.connect(signer) as BaseRewardPoolMock__factory;
  }
  static readonly contractName: "BaseRewardPoolMock";

  public readonly contractName: "BaseRewardPoolMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseRewardPoolMockInterface {
    return new utils.Interface(_abi) as BaseRewardPoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseRewardPoolMock {
    return new Contract(address, _abi, signerOrProvider) as BaseRewardPoolMock;
  }
}
