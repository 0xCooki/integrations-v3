/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  LinearInterestRateModel,
  LinearInterestRateModelInterface,
} from "../LinearInterestRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "U_optimal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R_base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R_slope1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R_slope2",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_R_base_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_R_slope1_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_R_slope2_RAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_U_Optimal_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_U_Optimal_inverted_WAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableLiquidity",
        type: "uint256",
      },
    ],
    name: "calcBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getModelParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "U_optimal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R_base",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R_slope1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "R_slope2",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b5060405162000ac338038062000ac383398101604081905262000035916200021f565b604080518082019091526002815261049560f41b602082015261271085106200007c5760405162461bcd60e51b815260040162000073919062000256565b60405180910390fd5b50604080518082019091526002815261049560f41b6020820152612710841115620000bc5760405162461bcd60e51b815260040162000073919062000256565b50604080518082019091526002815261049560f41b6020820152612710831115620000fc5760405162461bcd60e51b815260040162000073919062000256565b5060006200012185670de0b6b3a7640000620001c160201b6200043c1790919060201c565b608081905290506200013c81670de0b6b3a7640000620002bc565b60a052620001636b033b2e3c9fd0803ce800000085620001c1602090811b6200043c17901c565b60c0526200018a6b033b2e3c9fd0803ce800000084620001c1602090811b6200043c17901c565b60e052620001b16b033b2e3c9fd0803ce800000083620001c1602090811b6200043c17901c565b6101005250620003539350505050565b6000821580620001cf575081155b15620001de5750600062000219565b612710620001ee600282620002e8565b61ffff16620001fe84866200030c565b6200020a919062000326565b6200021691906200033c565b90505b92915050565b600080600080608085870312156200023657600080fd5b505082516020840151604085015160609095015191969095509092509050565b600060208083528351808285015260005b81811015620002855785810183015185820160400152820162000267565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620002195762000219620002a6565b634e487b7160e01b600052601260045260246000fd5b600061ffff80841680620003005762000300620002d2565b92169190910492915050565b8082028115828204841417620002195762000219620002a6565b80820180821115620002195762000219620002a6565b6000826200034e576200034e620002d2565b500490565b60805160a05160c05160e051610100516106cb620003f8600039600081816101840152818161030b015261041701526000818160e70152818161025a0152818161033e01526103f401526000818161010e015281816101bc0152818161028e0152818161035f01526103d101526000818161015d01526102bc01526000818160b80152818161020d01528181610235015281816102e001526103a101526106cb6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639cd3fdb51161005b5780639cd3fdb514610109578063c8284e6d14610130578063f81d438114610158578063fc4b2b781461017f57600080fd5b806342568d441461008d57806350ced104146100b357806354fd4d50146100da5780639aec06ea146100e2575b600080fd5b6100a061009b366004610537565b6101a6565b6040519081526020015b60405180910390f35b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6100a0600181565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b610138610397565b6040805194855260208501939093529183015260608201526080016100aa565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b6100a07f000000000000000000000000000000000000000000000000000000000000000081565b60008215806101b457508183105b156101e057507f0000000000000000000000000000000000000000000000000000000000000000610391565b6000836101ed8482610588565b6101ff90670de0b6b3a764000061059b565b61020991906105e1565b90507f00000000000000000000000000000000000000000000000000000000000000008110156102ba577f000000000000000000000000000000000000000000000000000000000000000061027e827f000000000000000000000000000000000000000000000000000000000000000061059b565b61028891906105e1565b6102b2907f00000000000000000000000000000000000000000000000000000000000000006105f5565b915050610391565b7f00000000000000000000000000000000000000000000000000000000000000006103057f000000000000000000000000000000000000000000000000000000000000000083610588565b61032f907f000000000000000000000000000000000000000000000000000000000000000061059b565b61033991906105e1565b6103837f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006105f5565b61038d91906105f5565b9150505b92915050565b60008080806103ce7f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a764000061048d565b947f000000000000000000000000000000000000000000000000000000000000000094507f000000000000000000000000000000000000000000000000000000000000000093507f000000000000000000000000000000000000000000000000000000000000000092509050565b6000821580610449575081155b1561045657506000610391565b612710610464600282610608565b61ffff16610472848661059b565b61047c91906105f5565b61048691906105e1565b9392505050565b60408051808201909152600281527f4d33000000000000000000000000000000000000000000000000000000000000602082015260009082610505576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fc9190610629565b60405180910390fd5b5060006105136002846105e1565b905082816105236127108761059b565b61052d91906105f5565b61038d91906105e1565b6000806040838503121561054a57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561039157610391610559565b808202811582820484141761039157610391610559565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826105f0576105f06105b2565b500490565b8082018082111561039157610391610559565b600061ffff8084168061061d5761061d6105b2565b92169190910492915050565b600060208083528351808285015260005b818110156106565785810183015185820160400152820161063a565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea2646970667358221220ed796cab7f1b69aa5591d4ce592f01956871126a814ccd8087f9f647be103f8c64736f6c63430008110033";

type LinearInterestRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinearInterestRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinearInterestRateModel__factory extends ContractFactory {
  constructor(...args: LinearInterestRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LinearInterestRateModel";
  }

  override deploy(
    U_optimal: PromiseOrValue<BigNumberish>,
    R_base: PromiseOrValue<BigNumberish>,
    R_slope1: PromiseOrValue<BigNumberish>,
    R_slope2: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LinearInterestRateModel> {
    return super.deploy(
      U_optimal,
      R_base,
      R_slope1,
      R_slope2,
      overrides || {}
    ) as Promise<LinearInterestRateModel>;
  }
  override getDeployTransaction(
    U_optimal: PromiseOrValue<BigNumberish>,
    R_base: PromiseOrValue<BigNumberish>,
    R_slope1: PromiseOrValue<BigNumberish>,
    R_slope2: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      U_optimal,
      R_base,
      R_slope1,
      R_slope2,
      overrides || {}
    );
  }
  override attach(address: string): LinearInterestRateModel {
    return super.attach(address) as LinearInterestRateModel;
  }
  override connect(signer: Signer): LinearInterestRateModel__factory {
    return super.connect(signer) as LinearInterestRateModel__factory;
  }
  static readonly contractName: "LinearInterestRateModel";

  public readonly contractName: "LinearInterestRateModel";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinearInterestRateModelInterface {
    return new utils.Interface(_abi) as LinearInterestRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinearInterestRateModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LinearInterestRateModel;
  }
}
