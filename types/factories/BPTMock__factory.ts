/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BPTMock, BPTMockInterface } from "../BPTMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_weights",
        type: "uint256[]",
      },
      {
        internalType: "bytes32",
        name: "_poolId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNormalizedWeights",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200162a3803806200162a83398101604081905262000034916200022e565b84846003620000448382620003df565b506004620000538282620003df565b505050620000706200006a6200009b60201b60201c565b6200009f565b60ff831660805281516200008c906006906020850190620000f1565b5060075550620004ab92505050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280548282559060005260206000209081019282156200012f579160200282015b828111156200012f57825182559160200191906001019062000112565b506200013d92915062000141565b5090565b5b808211156200013d576000815560010162000142565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000199576200019962000158565b604052919050565b600082601f830112620001b357600080fd5b81516001600160401b03811115620001cf57620001cf62000158565b6020620001e5601f8301601f191682016200016e565b8281528582848701011115620001fa57600080fd5b60005b838110156200021a578581018301518282018401528201620001fd565b506000928101909101919091529392505050565b600080600080600060a086880312156200024757600080fd5b85516001600160401b03808211156200025f57600080fd5b6200026d89838a01620001a1565b96506020915081880151818111156200028557600080fd5b620002938a828b01620001a1565b965050604088015160ff81168114620002ab57600080fd5b606089015190955081811115620002c157600080fd5b8801601f81018a13620002d357600080fd5b805182811115620002e857620002e862000158565b8060051b9250620002fb8484016200016e565b818152928201840192848101908c8511156200031657600080fd5b928501925b8484101562000336578351825292850192908501906200031b565b809750505050505050608086015190509295509295909350565b600181811c908216806200036557607f821691505b6020821081036200038657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003da57600081815260208120601f850160051c81016020861015620003b55750805b601f850160051c820191505b81811015620003d657828155600101620003c1565b5050505b505050565b81516001600160401b03811115620003fb57620003fb62000158565b62000413816200040c845462000350565b846200038c565b602080601f8311600181146200044b5760008415620004325750858301515b600019600386901b1c1916600185901b178555620003d6565b600085815260208120601f198616915b828110156200047c578886015182559484019460019091019084016200045b565b50858210156200049b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611163620004c760003960006101a801526111636000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063715018a6116100b2578063a457c2d711610081578063dd62ed3e11610066578063dd62ed3e146102a9578063f2fde38b146102ef578063f89f27ed1461030257600080fd5b8063a457c2d714610283578063a9059cbb1461029657600080fd5b8063715018a6146102385780638da5cb5b1461024057806395d89b41146102685780639dc29fac1461027057600080fd5b8063313ce5671161010957806339509351116100ee57806339509351146101da57806340c10f19146101ed57806370a082311461020257600080fd5b8063313ce567146101a157806338fff2d0146101d257600080fd5b806306fdde031461013b578063095ea7b31461015957806318160ddd1461017c57806323b872dd1461018e575b600080fd5b610143610317565b6040516101509190610f0c565b60405180910390f35b61016c610167366004610fa1565b6103a9565b6040519015158152602001610150565b6002545b604051908152602001610150565b61016c61019c366004610fcb565b6103c3565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610150565b600754610180565b61016c6101e8366004610fa1565b6103e7565b6102006101fb366004610fa1565b610433565b005b610180610210366004611007565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610200610441565b60055460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b610143610455565b61016c61027e366004610fa1565b610464565b61016c610291366004610fa1565b610479565b61016c6102a4366004610fa1565b61054f565b6101806102b7366004611029565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6102006102fd366004611007565b61055d565b61030a610614565b604051610150919061105c565b606060038054610326906110a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610352906110a0565b801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b5050505050905090565b6000336103b781858561066b565b60019150505b92915050565b6000336103d185828561081f565b6103dc8585856108f6565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906103b7908290869061042e9087906110f3565b61066b565b61043d8282610b65565b5050565b610449610c58565b6104536000610cd9565b565b606060048054610326906110a0565b60006104708383610d50565b50600192915050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103dc828686840361066b565b6000336103b78185856108f6565b610565610c58565b73ffffffffffffffffffffffffffffffffffffffff8116610608576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610539565b61061181610cd9565b50565b6060600680548060200260200160405190810160405280929190818152602001828054801561039f57602002820191906000526020600020905b81548152602001906001019080831161064e575050505050905090565b73ffffffffffffffffffffffffffffffffffffffff831661070d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff82166107b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108f057818110156108e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610539565b6108f0848484840361066b565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff8216610a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610af2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108f0565b73ffffffffffffffffffffffffffffffffffffffff8216610be2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610539565b8060026000828254610bf491906110f3565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610df3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610539565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610812565b600060208083528351808285015260005b81811015610f3957858101830151858201604001528201610f1d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610f9c57600080fd5b919050565b60008060408385031215610fb457600080fd5b610fbd83610f78565b946020939093013593505050565b600080600060608486031215610fe057600080fd5b610fe984610f78565b9250610ff760208501610f78565b9150604084013590509250925092565b60006020828403121561101957600080fd5b61102282610f78565b9392505050565b6000806040838503121561103c57600080fd5b61104583610f78565b915061105360208401610f78565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561109457835183529284019291840191600101611078565b50909695505050505050565b600181811c908216806110b457607f821691505b6020821081036110ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b808201808211156103bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122045680b403f1c162a424323b2e2e76634315fc13cb85a8e08621dc181043e226364736f6c63430008110033";

type BPTMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BPTMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BPTMock__factory extends ContractFactory {
  constructor(...args: BPTMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BPTMock";
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    _weights: PromiseOrValue<BigNumberish>[],
    _poolId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BPTMock> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      _weights,
      _poolId,
      overrides || {}
    ) as Promise<BPTMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    _weights: PromiseOrValue<BigNumberish>[],
    _poolId: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      _weights,
      _poolId,
      overrides || {}
    );
  }
  override attach(address: string): BPTMock {
    return super.attach(address) as BPTMock;
  }
  override connect(signer: Signer): BPTMock__factory {
    return super.connect(signer) as BPTMock__factory;
  }
  static readonly contractName: "BPTMock";

  public readonly contractName: "BPTMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BPTMockInterface {
    return new utils.Interface(_abi) as BPTMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BPTMock {
    return new Contract(address, _abi, signerOrProvider) as BPTMock;
  }
}
