/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompoundV2_CErc20Adapter,
  CompoundV2_CErc20AdapterInterface,
} from "../CompoundV2_CErc20Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "CTokenError",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cTokenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeemUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620018bb380380620018bb833981016040819052620000359162000336565b818181816001600160a01b03821615806200005757506001600160a01b038116155b156200007657604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e7919062000375565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014b919062000375565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c3919062000375565b6001600160a01b031660e0816001600160a01b0316815250505050505060c0516001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000221573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000247919062000375565b6001600160a01b03166101005260c051620002629062000282565b6101405261010051620002759062000282565b6101205250620003b69050565b608051604051630f67c5bd60e41b81526001600160a01b038381166004830152600092169063f67c5bd090602401602060405180830381865afa158015620002ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f491906200039c565b905080600003620003185760405163700ca0af60e01b815260040160405180910390fd5b919050565b6001600160a01b03811681146200033357600080fd5b50565b600080604083850312156200034a57600080fd5b825162000357816200031d565b60208401519092506200036a816200031d565b809150509250929050565b6000602082840312156200038857600080fd5b815162000395816200031d565b9392505050565b600060208284031215620003af57600080fd5b5051919050565b60805160a05160c05160e051610100516101205161014051611411620004aa600039600081816102af0152818161071d015281816108fd0152610a3201526000818160ff015281816106fc0152818161091e015261096a0152600081816101bd015281816107dc01528181610867015281816108d20152818161099c0152610a07015260006102250152600081816101940152818161024c0152818161063001528181610bee0152610fa3015260006101390152600081816102730152818161054801528181610a6a01528181610baa01528181610ce901528181610dc001528181610e6e0152610f1601526114116000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063852a12e311610097578063c12c21c011610066578063c12c21c01461026e578063ce30bbdb14610295578063d990c5a6146102aa578063db006a75146102d157600080fd5b8063852a12e3146101fa578063a0712d681461020d578063a50cf2c814610220578063bd90df701461024757600080fd5b8063595882b3116100d3578063595882b31461018a57806369e527da146101925780636f307dc3146101b857806378aa73a4146101df57600080fd5b8063027bd577146100fa5780632954018c146101345780632f4350c214610180575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012b565b6101886102e4565b005b610188610362565b7f000000000000000000000000000000000000000000000000000000000000000061015b565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b6101e7600181565b60405161ffff909116815260200161012b565b61018861020836600461112b565b6103d9565b61018861021b36600461112b565b610454565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61029d601381565b60405161012b9190611144565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6101886102df36600461112b565b6104cc565b6102ec610544565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610350576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036061035b6105da565b610747565b565b61036a610544565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ce576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036061035b610786565b6103e1610544565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610445576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045161035b82610942565b50565b61045c610544565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c0576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045161035b82610995565b6104d4610544565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610538576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045161035b82610a58565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d591906111a9565b905090565b6000806105e5610a66565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069b91906111cb565b9050600181116106ae5760009250505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81016106e26106dd82610b15565b610ba6565b8060200190518101906106f591906111cb565b93506107417f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610c97565b50505090565b8015610451576040517f935188650000000000000000000000000000000000000000000000000000000081526004810182905260240160405180910390fd5b600080610791610a66565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610823573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084791906111cb565b90506001811161085a5760009250505090565b60006001820390506108ac7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f14565b6108b86106dd82611009565b8060200190518101906108cb91906111cb565b93506108f87f00000000000000000000000000000000000000000000000000000000000000006001610f14565b6107417f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610c97565b60006109506106dd8361109a565b80602001905181019061096391906111cb565b90506109907f00000000000000000000000000000000000000000000000000000000000000006000610c97565b919050565b60006109e17f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610f14565b6109ed6106dd83611009565b806020019051810190610a0091906111cb565b9050610a2d7f00000000000000000000000000000000000000000000000000000000000000006001610f14565b6109907f00000000000000000000000000000000000000000000000000000000000000006000610c97565b60006109506106dd83610b15565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b704610aac610544565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b606081604051602401610b2a91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdb006a750000000000000000000000000000000000000000000000000000000017905292915050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a610bec610544565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401610c2c93929190611208565b6000604051808303816000875af1158015610c4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c9191908101906112b0565b92915050565b6000610ca1610a66565b9050828218600060015b828111610f0c5782811615610edd576040517fe75538c7000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e75538c7906024016040805180830381865afa158015610d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d68919061137b565b50915085811615610e21576040517f51e3f16000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015283811660248301527f000000000000000000000000000000000000000000000000000000000000000016906351e3f16090604401600060405180830381600087803b158015610e0457600080fd5b505af1158015610e18573d6000803e3d6000fd5b50505050610edd565b6040517f0d8f9cee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015283811660248301527f00000000000000000000000000000000000000000000000000000000000000001690630d8f9cee906044016020604051808303816000875af1158015610eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edb91906113b9565b505b7f80000000000000000000000000000000000000000000000000000000000000008114610f0c5760011b610cab565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d610f58610544565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b158015610ff557600080fd5b505af1158015610f0c573d6000803e3d6000fd5b60608160405160240161101e91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa0712d680000000000000000000000000000000000000000000000000000000017905292915050565b6060816040516024016110af91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f852a12e30000000000000000000000000000000000000000000000000000000017905292915050565b60006020828403121561113d57600080fd5b5035919050565b602081016015831061117f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b805173ffffffffffffffffffffffffffffffffffffffff8116811461099057600080fd5b6000602082840312156111bb57600080fd5b6111c482611185565b9392505050565b6000602082840312156111dd57600080fd5b5051919050565b60005b838110156111ff5781810151838201526020016111e7565b50506000910152565b600073ffffffffffffffffffffffffffffffffffffffff808616835280851660208401525060606040830152825180606084015261124d8160808501602087016111e4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156112c257600080fd5b815167ffffffffffffffff808211156112da57600080fd5b818401915084601f8301126112ee57600080fd5b81518181111561130057611300611281565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561134657611346611281565b8160405282815287602084870101111561135f57600080fd5b6113708360208301602088016111e4565b979650505050505050565b6000806040838503121561138e57600080fd5b61139783611185565b9150602083015161ffff811681146113ae57600080fd5b809150509250929050565b6000602082840312156113cb57600080fd5b815180151581146111c457600080fdfea2646970667358221220a42785567e4f42a4b96b3913898a3e4b0f9c433f0d7af3580fb5348bcf844d7164736f6c63430008110033";

type CompoundV2_CErc20AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundV2_CErc20AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundV2_CErc20Adapter__factory extends ContractFactory {
  constructor(...args: CompoundV2_CErc20AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompoundV2_CErc20Adapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _cToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompoundV2_CErc20Adapter> {
    return super.deploy(
      _creditManager,
      _cToken,
      overrides || {}
    ) as Promise<CompoundV2_CErc20Adapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _cToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creditManager, _cToken, overrides || {});
  }
  override attach(address: string): CompoundV2_CErc20Adapter {
    return super.attach(address) as CompoundV2_CErc20Adapter;
  }
  override connect(signer: Signer): CompoundV2_CErc20Adapter__factory {
    return super.connect(signer) as CompoundV2_CErc20Adapter__factory;
  }
  static readonly contractName: "CompoundV2_CErc20Adapter";

  public readonly contractName: "CompoundV2_CErc20Adapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundV2_CErc20AdapterInterface {
    return new utils.Interface(_abi) as CompoundV2_CErc20AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundV2_CErc20Adapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompoundV2_CErc20Adapter;
  }
}
