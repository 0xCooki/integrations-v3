/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  YearnV2Adapter,
  YearnV2AdapterInterface,
} from "../../YearnV2.sol/YearnV2Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxShares",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxLoss",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yTokenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200187d3803806200187d83398101604081905262000035916200032d565b81816001600160a01b03821615806200005557506001600160a01b038116155b156200007457604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e591906200036c565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014991906200036c565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c191906200036c565b6001600160a01b031660e0816001600160a01b031681525050505060c0516001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200024391906200036c565b6001600160a01b03166101008190526200025d9062000279565b610120526200026c8162000279565b6101405250620003ad9050565b608051604051630f67c5bd60e41b81526001600160a01b038381166004830152600092169063f67c5bd090602401602060405180830381865afa158015620002c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002eb919062000393565b9050806000036200030f5760405163700ca0af60e01b815260040160405180910390fd5b919050565b6001600160a01b03811681146200032a57600080fd5b50565b600080604083850312156200034157600080fd5b82516200034e8162000314565b6020840151909250620003618162000314565b809150509250929050565b6000602082840312156200037f57600080fd5b81516200038c8162000314565b9392505050565b600060208284031215620003a657600080fd5b5051919050565b60805160a05160c05160e0516101005161012051610140516113f762000486600039600081816102750152818161093e0152610b1d01526000818161011e0152818161091101528181610b4a0152610c230152600081816102cc015281816106d701528181610a160152610af2015260006101ed015260008181610227015281816104a401528181610c96015261104b0152600061015801526000818161024e015281816107e80152818161096601528181610c5201528181610d9101528181610e6801528181610f160152610fbe01526113f76000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c8063b6b55f2511610097578063ce30bbdb11610066578063ce30bbdb14610297578063d0e30db0146102ac578063e63697c8146102b4578063fc0c546a146102c757600080fd5b8063b6b55f251461020f578063bd90df7014610222578063c12c21c014610249578063c7c396241461027057600080fd5b80633ccfd60b116100d35780633ccfd60b146101b25780636e553f65146101ba57806378aa73a4146101cd578063a50cf2c8146101e857600080fd5b8062f714ce14610104578063027bd577146101195780632954018c146101535780632e1a7d4d1461019f575b600080fd5b6101176101123660046110d3565b6102ee565b005b6101407f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014a565b6101176101ad366004611103565b610369565b6101176103e3565b6101176101c83660046110d3565b610528565b6101d5600381565b60405161ffff909116815260200161014a565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b61011761021d366004611103565b61059f565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b6101407f000000000000000000000000000000000000000000000000000000000000000081565b61029f600481565b60405161014a919061111c565b610117610616565b6101176102c236600461115d565b61075b565b61017a7f000000000000000000000000000000000000000000000000000000000000000081565b6102f66107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035a576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036582600061087a565b5050565b6103716107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d5576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e081600061087a565b50565b6103eb6107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044f576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610459610962565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156104eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050f9190611195565b905060018111156103655761036560018203600161087a565b6105306107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610594576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610365826000610a11565b6105a76107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461060b576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e0816000610a11565b61061e6107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610682576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061068c610962565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561071e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107429190611195565b9050600181111561036557610365600182036001610a11565b6107636107e4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c7576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006107d1610962565b90506107de848284610b6e565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906111ae565b905090565b61090b8260405160240161089091815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2e1a7d4d00000000000000000000000000000000000000000000000000000000179052610c4e565b506103657f00000000000000000000000000000000000000000000000000000000000000008261093c576000610d3f565b7f0000000000000000000000000000000000000000000000000000000000000000610d3f565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b7046109a86107e4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa158015610851573d6000803e3d6000fd5b610a5b7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610fbc565b610aec82604051602401610a7191815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb6b55f2500000000000000000000000000000000000000000000000000000000179052610c4e565b50610b187f00000000000000000000000000000000000000000000000000000000000000006001610fbc565b6103657f000000000000000000000000000000000000000000000000000000000000000082610b48576000610d3f565b7f0000000000000000000000000000000000000000000000000000000000000000610d3f565b6040516024810184905273ffffffffffffffffffffffffffffffffffffffff8316604482015260648101829052610c1d90608401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fe63697c800000000000000000000000000000000000000000000000000000000179052610c4e565b50610c497f00000000000000000000000000000000000000000000000000000000000000006000610d3f565b505050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a610c946107e4565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401610cd4939291906111f6565b6000604051808303816000875af1158015610cf3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d39919081019061129e565b92915050565b6000610d49610962565b9050828218600060015b828111610fb45782811615610f85576040517fe75538c7000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e75538c7906024016040805180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611369565b50915085811615610ec9576040517f51e3f16000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015283811660248301527f000000000000000000000000000000000000000000000000000000000000000016906351e3f16090604401600060405180830381600087803b158015610eac57600080fd5b505af1158015610ec0573d6000803e3d6000fd5b50505050610f85565b6040517f0d8f9cee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015283811660248301527f00000000000000000000000000000000000000000000000000000000000000001690630d8f9cee906044016020604051808303816000875af1158015610f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f83919061139f565b505b7f80000000000000000000000000000000000000000000000000000000000000008114610fb45760011b610d53565b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d6110006107e4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b15801561109d57600080fd5b505af1158015610fb4573d6000803e3d6000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146103e057600080fd5b600080604083850312156110e657600080fd5b8235915060208301356110f8816110b1565b809150509250929050565b60006020828403121561111557600080fd5b5035919050565b6020810160158310611157577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60008060006060848603121561117257600080fd5b833592506020840135611184816110b1565b929592945050506040919091013590565b6000602082840312156111a757600080fd5b5051919050565b6000602082840312156111c057600080fd5b81516111cb816110b1565b9392505050565b60005b838110156111ed5781810151838201526020016111d5565b50506000910152565b600073ffffffffffffffffffffffffffffffffffffffff808616835280851660208401525060606040830152825180606084015261123b8160808501602087016111d2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156112b057600080fd5b815167ffffffffffffffff808211156112c857600080fd5b818401915084601f8301126112dc57600080fd5b8151818111156112ee576112ee61126f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156113345761133461126f565b8160405282815287602084870101111561134d57600080fd5b61135e8360208301602088016111d2565b979650505050505050565b6000806040838503121561137c57600080fd5b8251611387816110b1565b602084015190925061ffff811681146110f857600080fd5b6000602082840312156113b157600080fd5b815180151581146111cb57600080fdfea264697066735822122032b3cb921eb0e82b6f21f64627bf0e335fc48a4d5a5a72770efb057f147395de64736f6c63430008110033";

type YearnV2AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YearnV2AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YearnV2Adapter__factory extends ContractFactory {
  constructor(...args: YearnV2AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YearnV2Adapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YearnV2Adapter> {
    return super.deploy(
      _creditManager,
      _vault,
      overrides || {}
    ) as Promise<YearnV2Adapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creditManager, _vault, overrides || {});
  }
  override attach(address: string): YearnV2Adapter {
    return super.attach(address) as YearnV2Adapter;
  }
  override connect(signer: Signer): YearnV2Adapter__factory {
    return super.connect(signer) as YearnV2Adapter__factory;
  }
  static readonly contractName: "YearnV2Adapter";

  public readonly contractName: "YearnV2Adapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YearnV2AdapterInterface {
    return new utils.Interface(_abi) as YearnV2AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YearnV2Adapter {
    return new Contract(address, _abi, signerOrProvider) as YearnV2Adapter;
  }
}
