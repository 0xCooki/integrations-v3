/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { LidoMock, LidoMockInterface } from "../../LidoMock.sol/LidoMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referral",
        type: "address",
      },
    ],
    name: "Mock_Submitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "burnShares",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sharesAmount",
        type: "uint256",
      },
    ],
    name: "getPooledEthByShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ethAmount",
        type: "uint256",
      },
    ],
    name: "getSharesByPooledEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPooledEther",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "sharesOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_referral",
        type: "address",
      },
    ],
    name: "submit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalPooledEther",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalShares",
        type: "uint256",
      },
    ],
    name: "syncExchangeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPooledEtherSynced",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSharesSynced",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000600255600060035534801561001a57600080fd5b506111c38061002a6000396000f3fe60806040526004361061016e5760003560e01c80637a28fb88116100cb578063bdd17e1c1161007f578063dd62ed3e11610059578063dd62ed3e146103eb578063ee7a7c041461043e578063f5eb42dc1461045e57600080fd5b8063bdd17e1c146103aa578063cdb9a21c146103c0578063d5002f2e146103d657600080fd5b8063a1903eab116100b0578063a1903eab14610357578063a457c2d71461036a578063a9059cbb1461038a57600080fd5b80637a28fb88146102f157806395d89b411461031157600080fd5b806323b872dd1161012257806337cfdaca1161010757806337cfdaca1461020c57806339509351146102b157806370a08231146102d157600080fd5b806323b872dd14610275578063313ce5671461029557600080fd5b806318160ddd1161015357806318160ddd1461020c578063192084511461022f57806322301f6e1461024f57600080fd5b806306fdde0314610184578063095ea7b3146101dc57600080fd5b3661017f5761017d600061047e565b005b600080fd5b34801561019057600080fd5b5060408051808201909152601781527f4c6971756964207374616b656420457468657220322e3000000000000000000060208201525b6040516101d39190610f62565b60405180910390f35b3480156101e857600080fd5b506101fc6101f7366004610ff7565b610547565b60405190151581526020016101d3565b34801561021857600080fd5b5061022161055e565b6040519081526020016101d3565b34801561023b57600080fd5b5061022161024a366004611021565b61056e565b34801561025b57600080fd5b5061017d61026a36600461103a565b600391909155600255565b34801561028157600080fd5b506101fc61029036600461105c565b6105b1565b3480156102a157600080fd5b50604051601281526020016101d3565b3480156102bd57600080fd5b506101fc6102cc366004610ff7565b61069c565b3480156102dd57600080fd5b506102216102ec366004611098565b6106df565b3480156102fd57600080fd5b5061022161030c366004611021565b61070a565b34801561031d57600080fd5b5060408051808201909152600581527f737445544800000000000000000000000000000000000000000000000000000060208201526101c6565b610221610365366004611098565b610739565b34801561037657600080fd5b506101fc610385366004610ff7565b610744565b34801561039657600080fd5b506101fc6103a5366004610ff7565b6107f8565b3480156103b657600080fd5b5061022160035481565b3480156103cc57600080fd5b5061022160025481565b3480156103e257600080fd5b50610221610805565b3480156103f757600080fd5b506102216104063660046110b3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b34801561044a57600080fd5b5061017d610459366004610ff7565b610810565b34801561046a57600080fd5b50610221610479366004611098565b61081e565b600033348083036104f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f4445504f534954000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006104fb8261056e565b9050806000036105085750805b816003600082825461051a9190611115565b9091555061052a90508382610849565b61053583838761093a565b61053f8382610991565b949350505050565b60006105543384846109e9565b5060015b92915050565b600061056960035490565b905090565b60008061057a60035490565b90508060000361058d5750600092915050565b6105aa816105a461059d60025490565b8690610b51565b90610b5d565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020908152604080832033845290915281205482811015610672576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5452414e534645525f414d4f554e545f455843454544535f414c4c4f57414e4360448201527f450000000000000000000000000000000000000000000000000000000000000060648201526084016104e7565b61067d858585610b69565b610691853361068c8487610bee565b6109e9565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909161055491859061068c9086610bfa565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040812054610558905b60008061071660025490565b9050806000036107295750600092915050565b6105aa816105a461059d60035490565b60006105588261047e565b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452909152812054828110156107df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4445435245415345445f414c4c4f57414e43455f42454c4f575f5a45524f000060448201526064016104e7565b6107ee338561068c8487610bee565b5060019392505050565b6000610554338484610b69565b600061056960025490565b61081a8282610c06565b5050565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260208190526040812054610558565b73ffffffffffffffffffffffffffffffffffffffff82166108c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4d494e545f544f5f5448455f5a45524f5f41444452455353000000000000000060448201526064016104e7565b80600260008282546108d89190611115565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205461090d9082610bfa565b73ffffffffffffffffffffffffffffffffffffffff90921660009081526020819052604090209190915550565b6040805183815273ffffffffffffffffffffffffffffffffffffffff83811660208301528516917fed8dd430b1e4bba98e943dc5b157cf7b54d9e12916d6c474ff5733a95001d03b910160405180910390a2505050565b73ffffffffffffffffffffffffffffffffffffffff821660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6109d48461070a565b60405190815260200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8316610a66576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f415050524f56455f46524f4d5f5a45524f5f414444524553530000000000000060448201526064016104e7565b73ffffffffffffffffffffffffffffffffffffffff8216610ae3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f415050524f56455f544f5f5a45524f5f4144445245535300000000000000000060448201526064016104e7565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105aa8284611128565b60006105aa828461113f565b6000610b748261056e565b9050610b81848483610d63565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610be091815260200190565b60405180910390a350505050565b60006105aa828461117a565b60006105aa8284611115565b73ffffffffffffffffffffffffffffffffffffffff8216610c83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4255524e5f46524f4d5f5448455f5a45524f5f4144445245535300000000000060448201526064016104e7565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205480821115610d13576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4255524e5f414d4f554e545f455843454544535f42414c414e4345000000000060448201526064016104e7565b8160026000828254610d25919061117a565b90915550610d3590508183610bee565b73ffffffffffffffffffffffffffffffffffffffff9093166000908152602081905260409020929092555050565b73ffffffffffffffffffffffffffffffffffffffff8316610de0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f5452414e534645525f46524f4d5f5448455f5a45524f5f41444452455353000060448201526064016104e7565b73ffffffffffffffffffffffffffffffffffffffff8216610e5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5452414e534645525f544f5f5448455f5a45524f5f414444524553530000000060448201526064016104e7565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205480821115610eed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5452414e534645525f414d4f554e545f455843454544535f42414c414e43450060448201526064016104e7565b610ef78183610bee565b73ffffffffffffffffffffffffffffffffffffffff8086166000908152602081905260408082209390935590851681522054610f339083610bfa565b73ffffffffffffffffffffffffffffffffffffffff909316600090815260208190526040902092909255505050565b600060208083528351808285015260005b81811015610f8f57858101830151858201604001528201610f73565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610ff257600080fd5b919050565b6000806040838503121561100a57600080fd5b61101383610fce565b946020939093013593505050565b60006020828403121561103357600080fd5b5035919050565b6000806040838503121561104d57600080fd5b50508035926020909101359150565b60008060006060848603121561107157600080fd5b61107a84610fce565b925061108860208501610fce565b9150604084013590509250925092565b6000602082840312156110aa57600080fd5b6105aa82610fce565b600080604083850312156110c657600080fd5b6110cf83610fce565b91506110dd60208401610fce565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820180821115610558576105586110e6565b8082028115828204841417610558576105586110e6565b600082611175577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b81810381811115610558576105586110e656fea2646970667358221220d5aa8d68a8cfaf146d82b5802a68c1b5b93bad4e6e8bab3f60417bd0c480edf864736f6c63430008110033";

type LidoMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LidoMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LidoMock__factory extends ContractFactory {
  constructor(...args: LidoMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LidoMock";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LidoMock> {
    return super.deploy(overrides || {}) as Promise<LidoMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LidoMock {
    return super.attach(address) as LidoMock;
  }
  override connect(signer: Signer): LidoMock__factory {
    return super.connect(signer) as LidoMock__factory;
  }
  static readonly contractName: "LidoMock";

  public readonly contractName: "LidoMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LidoMockInterface {
    return new utils.Interface(_abi) as LidoMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LidoMock {
    return new Contract(address, _abi, signerOrProvider) as LidoMock;
  }
}
