/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AdapterData, AdapterDataInterface } from "../AdapterData";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "";

type AdapterDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdapterDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdapterData__factory extends ContractFactory {
  constructor(...args: AdapterDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AdapterData";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdapterData> {
    return super.deploy(overrides || {}) as Promise<AdapterData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdapterData {
    return super.attach(address) as AdapterData;
  }
  override connect(signer: Signer): AdapterData__factory {
    return super.connect(signer) as AdapterData__factory;
  }
  static readonly contractName: "AdapterData";

  public readonly contractName: "AdapterData";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdapterDataInterface {
    return new utils.Interface(_abi) as AdapterDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdapterData {
    return new Contract(address, _abi, signerOrProvider) as AdapterData;
  }
}
