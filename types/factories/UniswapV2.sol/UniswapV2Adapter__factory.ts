/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV2Adapter,
  UniswapV2AdapterInterface,
} from "../../UniswapV2.sol/UniswapV2Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPathException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "isPairAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "bool",
            name: "allowed",
            type: "bool",
          },
        ],
        internalType: "struct UniswapPairStatus[]",
        name: "pairs",
        type: "tuple[]",
      },
    ],
    name: "setPairBatchAllowanceStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateMinRAY",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapAllTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620019d6380380620019d68339810160408190526200003591620001f1565b81816001600160a01b03821615806200005557506001600160a01b038116155b156200007457604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000bf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e5919062000230565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000149919062000230565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c1919062000230565b6001600160a01b031660e052506200025792505050565b6001600160a01b0381168114620001ee57600080fd5b50565b600080604083850312156200020557600080fd5b82516200021281620001d8565b60208401519092506200022581620001d8565b809150509250929050565b6000602082840312156200024357600080fd5b81516200025081620001d8565b9392505050565b60805160a05160c05160e051611707620002cf6000396000818161018a015261086e0152600081816101b101528181610dc70152610ea20152600060fb0152600081816101eb01528181610a7e01528181610b1401528181610d3a01528181610e5e01528181610f47015261102601526117076000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a50cf2c811610081578063c12c21c01161005b578063c12c21c0146101e6578063ce30bbdb1461020d578063e20b42901461022257600080fd5b8063a50cf2c814610185578063bd90df70146101ac578063bdbeaa31146101d357600080fd5b806338ed1739116100b257806338ed17391461014257806378aa73a4146101575780638803dbee1461017257600080fd5b806306ab3ae9146100ce5780632954018c146100f6575b600080fd5b6100e16100dc366004611116565b610235565b60405190151581526020015b60405180910390f35b61011d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ed565b610155610150366004611194565b610283565b005b61015f600381565b60405161ffff90911681526020016100ed565b610155610180366004611194565b610423565b61011d7f000000000000000000000000000000000000000000000000000000000000000081565b61011d7f000000000000000000000000000000000000000000000000000000000000000081565b6101556101e1366004611207565b6105b6565b61011d7f000000000000000000000000000000000000000000000000000000000000000081565b610215600181565b6040516100ed919061125a565b61015561023036600461129b565b610840565b60006102418383610a2c565b73ffffffffffffffffffffffffffffffffffffffff80831660009081526020818152604080832093851683529290522054919450925060ff1690505b92915050565b61028b610a7a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ef576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006102f9610b10565b9050600080600061033c888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610bbf92505050565b92509250925082610379576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041682828c8c8c8c8a8c60405160240161039996959493929190611310565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f38ed1739000000000000000000000000000000000000000000000000000000001790526000610ceb565b5050505050505050505050565b61042b610a7a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048f576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610499610b10565b905060008060006104dc888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610bbf92505050565b92509250925082610519576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041682828c8c8c8c8a8c60405160240161053996959493929190611310565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8803dbee000000000000000000000000000000000000000000000000000000001790526000610ceb565b6105be610a7a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610622576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061062c610b10565b9050600080600061066f878780806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610bbf92505050565b925092509250826106ac576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152600091908416906370a0823190602401602060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610740919061139d565b90506001811161075457505050505061083a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016108338383836b033b2e3c9fd0803ce80000006107938e836113e5565b61079d91906113fc565b8c8c8b8d6040516024016107b696959493929190611310565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f38ed1739000000000000000000000000000000000000000000000000000000001790526001610ceb565b5050505050505b50505050565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa1580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190611445565b610924576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060005b8181101561083a5760008061098d86868581811061094857610948611469565b61095e9260206060909202019081019150611498565b87878681811061097057610970611469565b90506060020160200160208101906109889190611498565b610a2c565b915091508585848181106109a3576109a3611469565b90506060020160400160208101906109bb91906114b5565b73ffffffffffffffffffffffffffffffffffffffff9283166000908152602081815260408083209490951682529290925291902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055610a25816114d2565b9050610928565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161015610a6d575082905081610a73565b50819050825b9250929050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b919061150a565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b704610b56610a7a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa158015610ae7573d6000803e3d6000fd5b805160009081908190848282610bd757610bd7611469565b6020026020010151925084600182610bef9190611527565b81518110610bff57610bff611469565b60200260200101519150610c4785600081518110610c1f57610c1f611469565b602002602001015186600181518110610c3a57610c3a611469565b6020026020010151610235565b9350838015610c565750600281115b15610c8f57610c8c85600181518110610c7157610c71611469565b602002602001015186600281518110610c3a57610c3a611469565b93505b838015610c9c5750600381115b15610cd557610cd285600281518110610cb757610cb7611469565b602002602001015186600381518110610c3a57610c3a611469565b93505b6004811115610ce357600093505b509193909250565b6060610d17857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610d38565b610d2385858585610e35565b9050610d30856001610d38565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d610d7c610a7a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b158015610e1957600080fd5b505af1158015610e2d573d6000803e3d6000fd5b505050505050565b6060610e4083610e5a565b90508115610e5157610e5185610f45565b610d3084611024565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a610ea0610a7a565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401610ee09392919061155e565b6000604051808303816000875af1158015610eff573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261027d9190810190611606565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630d8f9cee610f89610b10565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff918216600482015290841660248201526044016020604051808303816000875af1158015610ffc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110209190611445565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f160611068610b10565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201529084166024820152604401600060405180830381600087803b1580156110d657600080fd5b505af11580156110ea573d6000803e3d6000fd5b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461111357600080fd5b50565b6000806040838503121561112957600080fd5b8235611134816110f1565b91506020830135611144816110f1565b809150509250929050565b60008083601f84011261116157600080fd5b50813567ffffffffffffffff81111561117957600080fd5b6020830191508360208260051b8501011115610a7357600080fd5b60008060008060008060a087890312156111ad57600080fd5b8635955060208701359450604087013567ffffffffffffffff8111156111d257600080fd5b6111de89828a0161114f565b90955093505060608701356111f2816110f1565b80925050608087013590509295509295509295565b6000806000806060858703121561121d57600080fd5b84359350602085013567ffffffffffffffff81111561123b57600080fd5b6112478782880161114f565b9598909750949560400135949350505050565b6020810160158310611295577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600080602083850312156112ae57600080fd5b823567ffffffffffffffff808211156112c657600080fd5b818501915085601f8301126112da57600080fd5b8135818111156112e957600080fd5b8660206060830285010111156112fe57600080fd5b60209290920196919550909350505050565b868152602080820187905260a0604083018190528201859052600090869060c08401835b8881101561136f578335611347816110f1565b73ffffffffffffffffffffffffffffffffffffffff1682529282019290820190600101611334565b5073ffffffffffffffffffffffffffffffffffffffff96909616606085015250505060800152949350505050565b6000602082840312156113af57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761027d5761027d6113b6565b600082611432577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b801515811461111357600080fd5b60006020828403121561145757600080fd5b815161146281611437565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156114aa57600080fd5b8135611462816110f1565b6000602082840312156114c757600080fd5b813561146281611437565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611503576115036113b6565b5060010190565b60006020828403121561151c57600080fd5b8151611462816110f1565b8181038181111561027d5761027d6113b6565b60005b8381101561155557818101518382015260200161153d565b50506000910152565b600073ffffffffffffffffffffffffffffffffffffffff80861683528085166020840152506060604083015282518060608401526115a381608085016020870161153a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561161857600080fd5b815167ffffffffffffffff8082111561163057600080fd5b818401915084601f83011261164457600080fd5b815181811115611656576116566115d7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561169c5761169c6115d7565b816040528281528760208487010111156116b557600080fd5b6116c683602083016020880161153a565b97965050505050505056fea26469706673582212209f22b34d229b60974824306dfe4009ad40852c33c9d967020732e864c3acd36164736f6c63430008110033";

type UniswapV2AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Adapter__factory extends ContractFactory {
  constructor(...args: UniswapV2AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2Adapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Adapter> {
    return super.deploy(
      _creditManager,
      _router,
      overrides || {}
    ) as Promise<UniswapV2Adapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_creditManager, _router, overrides || {});
  }
  override attach(address: string): UniswapV2Adapter {
    return super.attach(address) as UniswapV2Adapter;
  }
  override connect(signer: Signer): UniswapV2Adapter__factory {
    return super.connect(signer) as UniswapV2Adapter__factory;
  }
  static readonly contractName: "UniswapV2Adapter";

  public readonly contractName: "UniswapV2Adapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2AdapterInterface {
    return new utils.Interface(_abi) as UniswapV2AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Adapter {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Adapter;
  }
}
