/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UniswapV2Adapter,
  UniswapV2AdapterInterface,
} from "../../UniswapV2.sol/UniswapV2Adapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_connectorTokensInit",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPathException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "TooManyConnectorsException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken3",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken4",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken5",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken6",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken7",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken8",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorToken9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConnectors",
    outputs: [
      {
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isConnector",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConnectors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rateMinRAY",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapAllTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6102606040523480156200001257600080fd5b506040516200247e3803806200247e83398101604081905262000035916200034c565b8083836001600160a01b03821615806200005657506001600160a01b038116155b156200007557604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e691906200044c565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014a91906200044c565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c291906200044c565b6001600160a01b031660e05250508051610240819052600a1015620001fa57604051631410bf9560e21b815260040160405180910390fd5b62000204620002ec565b60005b610240518110156200026b5782818151811062000228576200022862000473565b60200260200101518282600a811062000245576200024562000473565b6001600160a01b039092166020929092020152620002638162000489565b905062000207565b5080516001600160a01b039081166101009081526020830151821661012090815260408401518316610140526060840151831661016052608084015183166101805260a084015183166101a05260c084015183166101c05260e084015183166101e0529083015182166102005290910151166102205250620004b192505050565b604051806101400160405280600a906020820280368337509192915050565b6001600160a01b03811681146200032157600080fd5b50565b805162000331816200030b565b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156200036257600080fd5b83516200036f816200030b565b8093505060208085015162000384816200030b565b60408601519093506001600160401b0380821115620003a257600080fd5b818701915087601f830112620003b757600080fd5b815181811115620003cc57620003cc62000336565b8060051b604051601f19603f83011681018181108582111715620003f457620003f462000336565b60405291825284820192508381018501918a8311156200041357600080fd5b938501935b828510156200043c576200042c8562000324565b8452938501939285019262000418565b8096505050505050509250925092565b6000602082840312156200045f57600080fd5b81516200046c816200030b565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620004aa57634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e051610200516102205161024051611e4f6200062f600039600081816102ff0152610dc901526000818161018c01528181610954015261126d015260008181610462015281816108fe01526111f5015260008181610411015281816108a8015261117d0152600081816102b10152818161085201526111050152600081816102d8015281816107fc015261108d015260008181610267015281816107a60152611015015260008181610240015281816107500152610f9d015260008181610389015281816106fa0152610f25015260008181610489015281816106a40152610ead0152600081816101dd0152818161064f0152610e35015260006103620152600081816103b0015281816115ba0152611695015260006102040152600081816103ea015281816112e2015281816113780152818161152d015281816116510152818161173a01526118190152611e4f6000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638803dbee116100d8578063c12c21c01161008c578063ce30bbdb11610066578063ce30bbdb14610448578063d2ceed8d1461045d578063f236ea0f1461048457600080fd5b8063c12c21c0146103e5578063c4ea156d1461040c578063c74eaa111461043357600080fd5b8063b96bc265116100bd578063b96bc26514610384578063bd90df70146103ab578063bdbeaa31146103d257600080fd5b80638803dbee1461034a578063a50cf2c81461035d57600080fd5b8063427b608d1161013a57806362fe42831161011457806362fe4283146102d357806367015b4c146102fa57806378aa73a41461032f57600080fd5b8063427b608d1461026257806347f37d1d1461028957806357dcfca4146102ac57600080fd5b80632954018c1161016b5780632954018c146101ff57806338ed1739146102265780633f01665c1461023b57600080fd5b8063017eab501461018757806304711e2c146101d8575b600080fd5b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b610239610234366004611955565b6104ab565b005b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b61029c6102973660046119c8565b61064b565b60405190151581526020016101cf565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6103217f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101cf565b610337600381565b60405161ffff90911681526020016101cf565b610239610358366004611955565b6109a8565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6102396103e03660046119ec565b610b3b565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b61043b610dc5565b6040516101cf9190611a3f565b610450600181565b6040516101cf9190611a99565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6101ae7f000000000000000000000000000000000000000000000000000000000000000081565b6104b36112de565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610517576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610521611374565b9050600080600061056488888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061142392505050565b925092509250826105a1576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063e82828c8c8c8c8a8c6040516024016105c196959493929190611ada565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f38ed17390000000000000000000000000000000000000000000000000000000017905260006114de565b5050505050505050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614806106f257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061074857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061079e57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806107f457507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061084a57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806108a057507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806108f657507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061094c57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806109a257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6109b06112de565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a14576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610a1e611374565b90506000806000610a6188888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061142392505050565b92509250925082610a9e576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063e82828c8c8c8c8a8c604051602401610abe96959493929190611ada565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f8803dbee0000000000000000000000000000000000000000000000000000000017905260006114de565b610b436112de565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ba7576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610bb1611374565b90506000806000610bf487878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061142392505050565b92509250925082610c31576040517fbb107e8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152600091908416906370a0823190602401602060405180830381865afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc59190611b67565b905060018111610cd9575050505050610dbf565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610db88383836b033b2e3c9fd0803ce8000000610d188e83611baf565b610d229190611bc6565b8c8c8b8d604051602401610d3b96959493929190611ada565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f38ed17390000000000000000000000000000000000000000000000000000000017905260016114de565b5050505050505b50505050565b60607f00000000000000000000000000000000000000000000000000000000000000008067ffffffffffffffff811115610e0157610e01611c01565b604051908082528060200260200182016040528015610e2a578160200160208202803683370190505b5091508015610ea2577f000000000000000000000000000000000000000000000000000000000000000082600081518110610e6757610e67611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6001811115610f1a577f000000000000000000000000000000000000000000000000000000000000000082600181518110610edf57610edf611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6002811115610f92577f000000000000000000000000000000000000000000000000000000000000000082600281518110610f5757610f57611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b600381111561100a577f000000000000000000000000000000000000000000000000000000000000000082600381518110610fcf57610fcf611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6004811115611082577f00000000000000000000000000000000000000000000000000000000000000008260048151811061104757611047611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60058111156110fa577f0000000000000000000000000000000000000000000000000000000000000000826005815181106110bf576110bf611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6006811115611172577f00000000000000000000000000000000000000000000000000000000000000008260068151811061113757611137611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60078111156111ea577f0000000000000000000000000000000000000000000000000000000000000000826007815181106111af576111af611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b6008811115611262577f00000000000000000000000000000000000000000000000000000000000000008260088151811061122757611227611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b60098111156112da577f00000000000000000000000000000000000000000000000000000000000000008260098151811061129f5761129f611c30565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa15801561134b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136f9190611c5f565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b7046113ba6112de565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa15801561134b573d6000803e3d6000fd5b8051600190600090819084828261143c5761143c611c30565b60200260200101519250846001826114549190611c7c565b8151811061146457611464611c30565b60200260200101519150600281111561149d5761149a8560018151811061148d5761148d611c30565b602002602001015161064b565b93505b8380156114aa5750600381115b156114c8576114c58560028151811061148d5761148d611c30565b93505b60048111156114d657600093505b509193909250565b606061150a857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61152b565b61151685858585611628565b905061152385600161152b565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d61156f6112de565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b15801561160c57600080fd5b505af1158015611620573d6000803e3d6000fd5b505050505050565b60606116338361164d565b905081156116445761164485611738565b61152384611817565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a6116936112de565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b81526004016116d393929190611cb3565b6000604051808303816000875af11580156116f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109a29190810190611d2c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630d8f9cee61177c611374565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff918216600482015290841660248201526044016020604051808303816000875af11580156117ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118139190611df7565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166351e3f16061185b611374565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201529084166024820152604401600060405180830381600087803b1580156118c957600080fd5b505af11580156118dd573d6000803e3d6000fd5b5050505050565b60008083601f8401126118f657600080fd5b50813567ffffffffffffffff81111561190e57600080fd5b6020830191508360208260051b850101111561192957600080fd5b9250929050565b73ffffffffffffffffffffffffffffffffffffffff8116811461195257600080fd5b50565b60008060008060008060a0878903121561196e57600080fd5b8635955060208701359450604087013567ffffffffffffffff81111561199357600080fd5b61199f89828a016118e4565b90955093505060608701356119b381611930565b80925050608087013590509295509295509295565b6000602082840312156119da57600080fd5b81356119e581611930565b9392505050565b60008060008060608587031215611a0257600080fd5b84359350602085013567ffffffffffffffff811115611a2057600080fd5b611a2c878288016118e4565b9598909750949560400135949350505050565b6020808252825182820181905260009190848201906040850190845b81811015611a8d57835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101611a5b565b50909695505050505050565b6020810160158310611ad4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b868152602080820187905260a0604083018190528201859052600090869060c08401835b88811015611b39578335611b1181611930565b73ffffffffffffffffffffffffffffffffffffffff1682529282019290820190600101611afe565b5073ffffffffffffffffffffffffffffffffffffffff96909616606085015250505060800152949350505050565b600060208284031215611b7957600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176109a2576109a2611b80565b600082611bfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215611c7157600080fd5b81516119e581611930565b818103818111156109a2576109a2611b80565b60005b83811015611caa578181015183820152602001611c92565b50506000910152565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301528251806060840152611cf8816080850160208701611c8f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b600060208284031215611d3e57600080fd5b815167ffffffffffffffff80821115611d5657600080fd5b818401915084601f830112611d6a57600080fd5b815181811115611d7c57611d7c611c01565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611dc257611dc2611c01565b81604052828152876020848701011115611ddb57600080fd5b611dec836020830160208801611c8f565b979650505050505050565b600060208284031215611e0957600080fd5b815180151581146119e557600080fdfea2646970667358221220b6ebfb45580c6d6d83ef5674ab4c4cd9fc496bc419d6f547fd426908298546cb64736f6c63430008110033";

type UniswapV2AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Adapter__factory extends ContractFactory {
  constructor(...args: UniswapV2AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UniswapV2Adapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _connectorTokensInit: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Adapter> {
    return super.deploy(
      _creditManager,
      _router,
      _connectorTokensInit,
      overrides || {}
    ) as Promise<UniswapV2Adapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _router: PromiseOrValue<string>,
    _connectorTokensInit: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _creditManager,
      _router,
      _connectorTokensInit,
      overrides || {}
    );
  }
  override attach(address: string): UniswapV2Adapter {
    return super.attach(address) as UniswapV2Adapter;
  }
  override connect(signer: Signer): UniswapV2Adapter__factory {
    return super.connect(signer) as UniswapV2Adapter__factory;
  }
  static readonly contractName: "UniswapV2Adapter";

  public readonly contractName: "UniswapV2Adapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2AdapterInterface {
    return new utils.Interface(_abi) as UniswapV2AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Adapter {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Adapter;
  }
}
