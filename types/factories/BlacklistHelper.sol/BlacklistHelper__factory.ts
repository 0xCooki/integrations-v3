/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BlacklistHelper,
  BlacklistHelperInterface,
} from "../../BlacklistHelper.sol/BlacklistHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdt",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotUnPausableAdminException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeNonBlacklistable",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaimException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimableAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditFacade",
        type: "address",
      },
    ],
    name: "CreditFacadeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creditFacade",
        type: "address",
      },
    ],
    name: "CreditFacadeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addClaimable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditFacade",
        type: "address",
      },
    ],
    name: "addCreditFacade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isSupportedCreditFacade",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditFacade",
        type: "address",
      },
    ],
    name: "removeCreditFacade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620014a9380380620014a9833981016040819052620000349162000109565b6000805460ff19169055826001600160a01b0381166200006757604051635919af9760e11b815260040160405180910390fd5b806001600160a01b031663087376956040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000cc919062000153565b6001600160a01b0390811660805292831660a052501660c0525062000178565b80516001600160a01b03811681146200010457600080fd5b919050565b6000806000606084860312156200011f57600080fd5b6200012a84620000ec565b92506200013a60208501620000ec565b91506200014a60408501620000ec565b90509250925092565b6000602082840312156200016657600080fd5b6200017182620000ec565b9392505050565b60805160a05160c0516112c9620001e06000396000818161010901528181610580015261061601526000818161015a01528181610475015261050b015260008181610232015281816103b10152818161067d01528181610880015261096c01526112c96000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063576cd2d11161008c57806389406ff51161006657806389406ff5146102075780639e3896101461021a578063a50cf2c81461022d578063d4570c1c1461025457600080fd5b8063576cd2d1146101d15780635c975abb146101f45780638456cb59146101ff57600080fd5b80633f4ba83a116100c85780633f4ba83a1461017c5780634028eddc146101845780634610f6ac146101a757806354fd4d50146101ba57600080fd5b806321c0b342146100ef5780632f48ab7d146101045780633e413bee14610155575b600080fd5b6101026100fd366004611115565b61027f565b005b61012b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61012b7f000000000000000000000000000000000000000000000000000000000000000081565b610102610383565b610197610192366004611115565b610471565b604051901515815260200161014c565b6101026101b5366004611148565b61064f565b6101c361012c81565b60405190815260200161014c565b6101976101df366004611148565b60016020526000908152604090205460ff1681565b60005460ff16610197565b610102610852565b610102610215366004611148565b61093e565b61010261022836600461116a565b610a96565b61012b7f000000000000000000000000000000000000000000000000000000000000000081565b6101c3610262366004611115565b600260209081526000928352604080842090915290825290205481565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260026020908152604080832033845290915290205460018110156102eb576040517f45326b6d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff83166000818152600260209081526040808320338452909152812055610327908383610b89565b6040805173ffffffffffffffffffffffffffffffffffffffff8481168252602082018490523392908616917f913c992353dc81b7a8ba31496c484e9b6306bd2f6c509a649a38fdf5e1c953b291015b60405180910390a3505050565b6040517fd4eb5db00000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063d4eb5db090602401602060405180830381865afa15801561040d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043191906111a6565b610467576040517f10332dee00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046f610c1b565b565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361057e576040517ffe575a8700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063fe575a87906024015b602060405180830381865afa158015610553573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057791906111a6565b9050610649565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610645576040517fe47d606000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e47d606090602401610536565b5060005b92915050565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa1580156106d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fd91906111a6565b610733576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e1d49d7d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a291906111a6565b6107d8576040517f28cfda1b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116600081815260016020819052604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909217909155517fbd5b26ef7954344752b759707e6bcd78451ef30ebacaf751abec2ede07b8e24f9190a250565b6040517f3a41ec640000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633a41ec6490602401602060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090091906111a6565b610936576040517fd794b1e700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046f610c98565b6040517f5f259aba0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690635f259aba90602401602060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec91906111a6565b610a22576040517f61081c1500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517f794e243b3141951917f506b06ff4d020392f585dc4a81a052fde47ff96d438de9190a250565b3360009081526001602052604090205460ff16610adf576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600090815260026020908152604080832093861683529290529081208054839290610b239084906111c8565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fbc75c7cef9767751e0c642bcefb2d29f7cfd455959c2323505bc3d3c5b70fafd8360405161037691815260200190565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610c16908490610cf3565b505050565b610c23610e04565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b610ca0610e70565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c6e3390565b6000610d55826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610edd9092919063ffffffff16565b805190915015610c165780806020019051810190610d7391906111a6565b610c16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60005460ff1661046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610dfb565b60005460ff161561046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610dfb565b6060610eec8484600085610ef4565b949350505050565b606082471015610f86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610dfb565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610faf9190611226565b60006040518083038185875af1925050503d8060008114610fec576040519150601f19603f3d011682016040523d82523d6000602084013e610ff1565b606091505b50915091506110028783838761100d565b979650505050505050565b606083156110a357825160000361109c5773ffffffffffffffffffffffffffffffffffffffff85163b61109c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610dfb565b5081610eec565b610eec83838151156110b85781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfb9190611242565b803573ffffffffffffffffffffffffffffffffffffffff8116811461111057600080fd5b919050565b6000806040838503121561112857600080fd5b611131836110ec565b915061113f602084016110ec565b90509250929050565b60006020828403121561115a57600080fd5b611163826110ec565b9392505050565b60008060006060848603121561117f57600080fd5b611188846110ec565b9250611196602085016110ec565b9150604084013590509250925092565b6000602082840312156111b857600080fd5b8151801515811461116357600080fd5b80820180821115610649577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60005b8381101561121d578181015183820152602001611205565b50506000910152565b60008251611238818460208701611202565b9190910192915050565b6020815260008251806020840152611261816040850160208701611202565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220328535a205b1966299ad17d00d5dcbea0284798811c5538ecc0d3e4b061a2dde64736f6c63430008110033";

type BlacklistHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlacklistHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BlacklistHelper__factory extends ContractFactory {
  constructor(...args: BlacklistHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BlacklistHelper";
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _usdt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BlacklistHelper> {
    return super.deploy(
      _addressProvider,
      _usdc,
      _usdt,
      overrides || {}
    ) as Promise<BlacklistHelper>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _usdt: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addressProvider,
      _usdc,
      _usdt,
      overrides || {}
    );
  }
  override attach(address: string): BlacklistHelper {
    return super.attach(address) as BlacklistHelper;
  }
  override connect(signer: Signer): BlacklistHelper__factory {
    return super.connect(signer) as BlacklistHelper__factory;
  }
  static readonly contractName: "BlacklistHelper";

  public readonly contractName: "BlacklistHelper";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlacklistHelperInterface {
    return new utils.Interface(_abi) as BlacklistHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BlacklistHelper {
    return new Contract(address, _abi, signerOrProvider) as BlacklistHelper;
  }
}
