/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AddressProvider,
  AddressProviderInterface,
} from "../AddressProvider";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "service",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "AddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getACL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccountFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractsRegister",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataCompressor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGearToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLeveragedActions",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWETHGateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWethToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setACL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setAccountFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setContractsRegister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setDataCompressor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setGearToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setLeveragedActions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setTreasuryContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setWETHGateway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setWethToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361005f565b60405130906f20a2222922a9a9afa82927ab24a222a960811b907fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c69190600090a36100af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c53806100be6000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806377532ed9116100f9578063bcaead9811610097578063ce3c4ae411610071578063ce3c4ae414610357578063e30c39781461036a578063f2fde38b1461038a578063fca513a81461039d57600080fd5b8063bcaead9814610329578063c5120b391461033c578063c513c9bb1461034f57600080fd5b80638da5cb5b116100d35780638da5cb5b146102e85780639068a86814610306578063addc1a761461030e578063affd92431461032157600080fd5b806377532ed9146102ba5780637b6757ff146102c257806386e09c08146102d557600080fd5b80634c252f911161016657806354fd4d501161014057806354fd4d5014610253578063699f200f14610269578063715018a61461029f57806376aad605146102a757600080fd5b80634c252f91146102305780634e71e0c814610238578063530e784f1461024057600080fd5b806321da58371161019757806321da58371461020d57806326c74fc31461022057806344b885631461022857600080fd5b8063060678c2146101be57806308737695146101f05780631ed65110146101f8575b600080fd5b6101c66103a5565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101c66103d5565b61020b610206366004610b5b565b610400565b005b61020b61021b366004610b5b565b610435565b6101c6610467565b6101c6610492565b6101c66104bd565b61020b6104e8565b61020b61024e366004610b5b565b6105e0565b61025b600281565b6040519081526020016101e7565b6101c6610277366004610b98565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b61020b610612565b61020b6102b5366004610b5b565b610626565b6101c6610658565b61020b6102d0366004610b5b565b610683565b61020b6102e3366004610b5b565b6106b5565b60005473ffffffffffffffffffffffffffffffffffffffff166101c6565b6101c66106e7565b61020b61031c366004610b5b565b610712565b6101c6610744565b61020b610337366004610b5b565b61076f565b61020b61034a366004610b5b565b6107a1565b6101c66107d3565b61020b610365366004610b5b565b6107fe565b6001546101c69073ffffffffffffffffffffffffffffffffffffffff1681565b61020b610398366004610b5b565b610830565b6101c6610922565b60006103d07f444154415f434f4d50524553534f520000000000000000000000000000000000610949565b905090565b60006103d07f41434c0000000000000000000000000000000000000000000000000000000000610949565b6104086109e7565b6104327f54524541535552595f434f4e545241435400000000000000000000000000000082610a68565b50565b61043d6109e7565b6104327f574554485f47415445574159000000000000000000000000000000000000000082610a68565b60006103d07f54524541535552595f434f4e5452414354000000000000000000000000000000610949565b60006103d07f4c45564552414745445f414354494f4e53000000000000000000000000000000610949565b60006103d07f574554485f544f4b454e00000000000000000000000000000000000000000000610949565b60015473ffffffffffffffffffffffffffffffffffffffff163314610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f436c61696d61626c653a2053656e646572206973206e6f742070656e64696e6760448201527f206f776e6572000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6001546105b69073ffffffffffffffffffffffffffffffffffffffff16610ae6565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6105e86109e7565b6104327f50524943455f4f5241434c45000000000000000000000000000000000000000082610a68565b61061a6109e7565b6106246000610ae6565b565b61062e6109e7565b6104327f41434c000000000000000000000000000000000000000000000000000000000082610a68565b60006103d07f574554485f474154455741590000000000000000000000000000000000000000610949565b61068b6109e7565b6104327f4c45564552414745445f414354494f4e5300000000000000000000000000000082610a68565b6106bd6109e7565b6104327f574554485f544f4b454e0000000000000000000000000000000000000000000082610a68565b60006103d07f4143434f554e545f464143544f52590000000000000000000000000000000000610949565b61071a6109e7565b6104327f4143434f554e545f464143544f5259000000000000000000000000000000000082610a68565b60006103d07f474541525f544f4b454e00000000000000000000000000000000000000000000610949565b6107776109e7565b6104327f474541525f544f4b454e0000000000000000000000000000000000000000000082610a68565b6107a96109e7565b6104327f444154415f434f4d50524553534f52000000000000000000000000000000000082610a68565b60006103d07f434f4e5452414354535f52454749535445520000000000000000000000000000610949565b6108066109e7565b6104327f434f4e5452414354535f5245474953544552000000000000000000000000000082610a68565b6108386109e7565b73ffffffffffffffffffffffffffffffffffffffff81166108db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f436c61696d61626c653a206e6577206f776e657220697320746865207a65726f60448201527f2061646472657373000000000000000000000000000000000000000000000000606482015260840161058b565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006103d07f50524943455f4f5241434c4500000000000000000000000000000000000000005b6000818152600260209081526040808320548151808301909252600382527f41503100000000000000000000000000000000000000000000000000000000009282019290925273ffffffffffffffffffffffffffffffffffffffff90911690816109e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b9190610bb1565b5092915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161058b565b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85169081179091559051909184917fb37614c7d254ea8d16eb81fa11dddaeb266aa8ba4917980859c7740aff30c6919190a35050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b6d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610b9157600080fd5b9392505050565b600060208284031215610baa57600080fd5b5035919050565b600060208083528351808285015260005b81811015610bde57858101830151858201604001528201610bc2565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea2646970667358221220755cf5b6ba8a1c434c22a11b59c3041497c5f8a5f645ed339b47e9ea35b8f01f64736f6c63430008110033";

type AddressProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressProvider__factory extends ContractFactory {
  constructor(...args: AddressProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AddressProvider";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressProvider> {
    return super.deploy(overrides || {}) as Promise<AddressProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressProvider {
    return super.attach(address) as AddressProvider;
  }
  override connect(signer: Signer): AddressProvider__factory {
    return super.connect(signer) as AddressProvider__factory;
  }
  static readonly contractName: "AddressProvider";

  public readonly contractName: "AddressProvider";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressProviderInterface {
    return new utils.Interface(_abi) as AddressProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressProvider {
    return new Contract(address, _abi, signerOrProvider) as AddressProvider;
  }
}
