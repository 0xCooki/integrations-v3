/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompoundV2_CEtherAdapter,
  CompoundV2_CEtherAdapterInterface,
} from "../CompoundV2_CEtherAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_creditManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cethGateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "errorCode",
        type: "uint256",
      },
    ],
    name: "CTokenError",
    type: "error",
  },
  {
    inputs: [],
    name: "CallerNotConfiguratorException",
    type: "error",
  },
  {
    inputs: [],
    name: "CreditFacadeOnlyException",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenNotAllowedException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressException",
    type: "error",
  },
  {
    inputs: [],
    name: "_acl",
    outputs: [
      {
        internalType: "contract IACL",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterType",
    outputs: [
      {
        internalType: "enum AdapterType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_gearboxAdapterVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cTokenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creditManager",
    outputs: [
      {
        internalType: "contract ICreditManagerV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeemUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101806040523480156200001257600080fd5b5060405162001a7e38038062001a7e8339810160408190526200003591620003b8565b818181816001600160a01b03821615806200005757506001600160a01b038116155b156200007657604051635919af9760e11b815260040160405180910390fd5b6001600160a01b0382166080819052604080516316f0115b60e01b815290516316f0115b916004808201926020929091908290030181865afa158015620000c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000e79190620003f7565b6001600160a01b0316632954018c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014b9190620003f7565b6001600160a01b0390811660a081905290821660c05260408051630873769560e01b815290516308737695916004808201926020929091908290030181865afa1580156200019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c39190620003f7565b6001600160a01b031660e0816001600160a01b0316815250505050505060c0516001600160a01b031663d1d367ba6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000221573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002479190620003f7565b6001600160a01b0316610100816001600160a01b03168152505060c0516001600160a01b0316633fc8cef36040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c89190620003f7565b6001600160a01b03166101205261010051620002e49062000304565b6101605261012051620002f79062000304565b6101405250620004389050565b608051604051630f67c5bd60e41b81526001600160a01b038381166004830152600092169063f67c5bd090602401602060405180830381865afa15801562000350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037691906200041e565b9050806000036200039a5760405163700ca0af60e01b815260040160405180910390fd5b919050565b6001600160a01b0381168114620003b557600080fd5b50565b60008060408385031215620003cc57600080fd5b8251620003d9816200039f565b6020840151909250620003ec816200039f565b809150509250929050565b6000602082840312156200040a57600080fd5b815162000417816200039f565b9392505050565b6000602082840312156200043157600080fd5b5051919050565b60805160a05160c05160e0516101005161012051610140516101605161152b62000553600039600081816102b001528181610778015281816109580152610b0201526000818160ff01528181610757015281816109790152610a3a0152600081816101be01528181610837015281816108c20152818161092d01528181610a6c0152610ad701526000818161019701528181610631015281816106bc0152818161072c015281816109a401528181610a0f0152610b2f0152600061022601526000818161024d01528181610cbe0152610e05015260006101390152600081816102740152818161054901528181610b8401528181610c3101528181610dc101528181610f0001528181610fd70152611085015261152b6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063852a12e311610097578063c12c21c011610066578063c12c21c01461026f578063ce30bbdb14610296578063d990c5a6146102ab578063db006a75146102d257600080fd5b8063852a12e3146101fb578063a0712d681461020e578063a50cf2c814610221578063bd90df701461024857600080fd5b8063595882b3116100d3578063595882b31461018a57806369e527da146101925780636f307dc3146101b957806378aa73a4146101e057600080fd5b8063027bd577146100fa5780632954018c146101345780632f4350c214610180575b600080fd5b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012b565b6101886102e5565b005b610188610363565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b6101e8600181565b60405161ffff909116815260200161012b565b610188610209366004611245565b6103da565b61018861021c366004611245565b610455565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b61029e601481565b60405161012b919061125e565b6101217f000000000000000000000000000000000000000000000000000000000000000081565b6101886102e0366004611245565b6104cd565b6102ed610545565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610351576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036161035c6105db565b6107a2565b565b61036b610545565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cf576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61036161035c6107e1565b6103e2610545565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610446576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045261035c8261099d565b50565b61045d610545565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c1576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045261035c82610a65565b6104d5610545565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610539576040517fd8026b2200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045261035c82610b28565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632f7a18816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d691906112c3565b905090565b6000806105e6610b80565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c91906112e5565b9050600181116106af5760009250505090565b60006001820390506107017f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c2f565b61071261070d82610d2c565b610dbd565b80602001905181019061072591906112e5565b93506107527f00000000000000000000000000000000000000000000000000000000000000006001610c2f565b61079c7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610eae565b50505090565b8015610452576040517f935188650000000000000000000000000000000000000000000000000000000081526004810182905260240160405180910390fd5b6000806107ec610b80565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff80831660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561087e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a291906112e5565b9050600181116108b55760009250505090565b60006001820390506109077f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c2f565b61091361070d82611123565b80602001905181019061092691906112e5565b93506109537f00000000000000000000000000000000000000000000000000000000000000006001610c2f565b61079c7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610eae565b60006109e97f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c2f565b6109f561070d836111b4565b806020019051810190610a0891906112e5565b9050610a357f00000000000000000000000000000000000000000000000000000000000000006001610c2f565b610a607f00000000000000000000000000000000000000000000000000000000000000006000610eae565b919050565b6000610ab17f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c2f565b610abd61070d83611123565b806020019051810190610ad091906112e5565b9050610afd7f00000000000000000000000000000000000000000000000000000000000000006001610c2f565b610a607f00000000000000000000000000000000000000000000000000000000000000006000610eae565b6000610b747f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610c2f565b6109f561070d83610d2c565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e958b704610bc6610545565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156105b2573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166346fb371d610c73610545565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff91821660048201527f000000000000000000000000000000000000000000000000000000000000000082166024820152908516604482015260648101849052608401600060405180830381600087803b158015610d1057600080fd5b505af1158015610d24573d6000803e3d6000fd5b505050505050565b606081604051602401610d4191815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fdb006a750000000000000000000000000000000000000000000000000000000017905292915050565b60607f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636ce4074a610e03610545565b7f0000000000000000000000000000000000000000000000000000000000000000856040518463ffffffff1660e01b8152600401610e4393929190611322565b6000604051808303816000875af1158015610e62573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ea891908101906113ca565b92915050565b6000610eb8610b80565b9050828218600060015b828111610d2457828116156110f4576040517fe75538c7000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063e75538c7906024016040805180830381865afa158015610f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7f9190611495565b50915085811615611038576040517f51e3f16000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015283811660248301527f000000000000000000000000000000000000000000000000000000000000000016906351e3f16090604401600060405180830381600087803b15801561101b57600080fd5b505af115801561102f573d6000803e3d6000fd5b505050506110f4565b6040517f0d8f9cee00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015283811660248301527f00000000000000000000000000000000000000000000000000000000000000001690630d8f9cee906044016020604051808303816000875af11580156110ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f291906114d3565b505b7f80000000000000000000000000000000000000000000000000000000000000008114610d245760011b610ec2565b60608160405160240161113891815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa0712d680000000000000000000000000000000000000000000000000000000017905292915050565b6060816040516024016111c991815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f852a12e30000000000000000000000000000000000000000000000000000000017905292915050565b60006020828403121561125757600080fd5b5035919050565b6020810160158310611299577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b805173ffffffffffffffffffffffffffffffffffffffff81168114610a6057600080fd5b6000602082840312156112d557600080fd5b6112de8261129f565b9392505050565b6000602082840312156112f757600080fd5b5051919050565b60005b83811015611319578181015183820152602001611301565b50506000910152565b600073ffffffffffffffffffffffffffffffffffffffff80861683528085166020840152506060604083015282518060608401526113678160808501602087016112fe565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01691909101608001949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156113dc57600080fd5b815167ffffffffffffffff808211156113f457600080fd5b818401915084601f83011261140857600080fd5b81518181111561141a5761141a61139b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156114605761146061139b565b8160405282815287602084870101111561147957600080fd5b61148a8360208301602088016112fe565b979650505050505050565b600080604083850312156114a857600080fd5b6114b18361129f565b9150602083015161ffff811681146114c857600080fd5b809150509250929050565b6000602082840312156114e557600080fd5b815180151581146112de57600080fdfea26469706673582212206eceda2f354abb7e3631b5db775c430266a4ded5e731f08442092f3a9d1d886764736f6c63430008110033";

type CompoundV2_CEtherAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundV2_CEtherAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundV2_CEtherAdapter__factory extends ContractFactory {
  constructor(...args: CompoundV2_CEtherAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompoundV2_CEtherAdapter";
  }

  override deploy(
    _creditManager: PromiseOrValue<string>,
    _cethGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompoundV2_CEtherAdapter> {
    return super.deploy(
      _creditManager,
      _cethGateway,
      overrides || {}
    ) as Promise<CompoundV2_CEtherAdapter>;
  }
  override getDeployTransaction(
    _creditManager: PromiseOrValue<string>,
    _cethGateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _creditManager,
      _cethGateway,
      overrides || {}
    );
  }
  override attach(address: string): CompoundV2_CEtherAdapter {
    return super.attach(address) as CompoundV2_CEtherAdapter;
  }
  override connect(signer: Signer): CompoundV2_CEtherAdapter__factory {
    return super.connect(signer) as CompoundV2_CEtherAdapter__factory;
  }
  static readonly contractName: "CompoundV2_CEtherAdapter";

  public readonly contractName: "CompoundV2_CEtherAdapter";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundV2_CEtherAdapterInterface {
    return new utils.Interface(_abi) as CompoundV2_CEtherAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundV2_CEtherAdapter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CompoundV2_CEtherAdapter;
  }
}
