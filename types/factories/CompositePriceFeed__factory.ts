/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CompositePriceFeed,
  CompositePriceFeedInterface,
} from "../CompositePriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_targetToBasePriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToUsdPriceFeed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ChainPriceStaleException",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplementedException",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceOracleNotExistsException",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroPriceException",
    type: "error",
  },
  {
    inputs: [],
    name: "answerDenominator",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToUsdPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    name: "getRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "roundId",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "answer",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updatedAt",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "answeredInRound",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeedType",
    outputs: [
      {
        internalType: "enum PriceFeedType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "skipPriceCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetToBasePriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162000e7538038062000e758339810160408190526200003591620001f4565b6001600160a01b03808316608081905290821660a05260408051633942720b60e11b81529051637284e416916004808201926000929091908290030181865afa15801562000087573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b1919081019062000268565b604051602001620000c3919062000320565b60405160208183030381529060405260009081620000e29190620003e6565b5060a0516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000124573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014a9190620004b2565b60ff1660c08160ff16815250506080516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000198573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001be9190620004b2565b620001cb90600a620005f3565b60e05250620006049050565b80516001600160a01b0381168114620001ef57600080fd5b919050565b600080604083850312156200020857600080fd5b6200021383620001d7565b91506200022360208401620001d7565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200025f57818101518382015260200162000245565b50506000910152565b6000602082840312156200027b57600080fd5b81516001600160401b03808211156200029357600080fd5b818401915084601f830112620002a857600080fd5b815181811115620002bd57620002bd6200022c565b604051601f8201601f19908116603f01168101908382118183101715620002e857620002e86200022c565b816040528281528760208487010111156200030257600080fd5b6200031583602083016020880162000242565b979650505050505050565b600082516200033481846020870162000242565b7020746f2055534420436f6d706f7369746560781b920191825250601101919050565b600181811c908216806200036c57607f821691505b6020821081036200038d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e157600081815260208120601f850160051c81016020861015620003bc5750805b601f850160051c820191505b81811015620003dd57828155600101620003c8565b5050505b505050565b81516001600160401b038111156200040257620004026200022c565b6200041a8162000413845462000357565b8462000393565b602080601f831160018114620004525760008415620004395750858301515b600019600386901b1c1916600185901b178555620003dd565b600085815260208120601f198616915b82811015620004835788860151825594840194600190910190840162000462565b5085821015620004a25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620004c557600080fd5b815160ff81168114620004d757600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000535578160001904821115620005195762000519620004de565b808516156200052757918102915b93841c9390800290620004f9565b509250929050565b6000826200054e57506001620005ed565b816200055d57506000620005ed565b81600181146200057657600281146200058157620005a1565b6001915050620005ed565b60ff841115620005955762000595620004de565b50506001821b620005ed565b5060208310610133831016604e8410600b8410161715620005c6575081810a620005ed565b620005d28383620004f4565b8060001904821115620005e957620005e9620004de565b0290505b92915050565b6000620004d760ff8416836200053d565b60805160a05160c05160e051610823620006526000396000818160c8015261046a0152600061010201526000818161015001526103c3015260008181610203015261031e01526108236000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80637284e41611610076578063a76d54471161005b578063a76d5447146101fe578063d62ada1114610225578063feaf968c1461023d57600080fd5b80637284e4161461019f5780639a6fc8f5146101b457600080fd5b80633fd0875f116100a75780633fd0875f1461013657806351a799d61461014b57806354fd4d501461019757600080fd5b806325d23b83146100c3578063313ce567146100fd575b600080fd5b6100ea7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101247f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f4565b61013e600881565b6040516100f49190610546565b6101727f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f4565b6100ea600181565b6101a7610245565b6040516100f49190610587565b6101c76101c236600461060e565b6102d3565b6040805169ffffffffffffffffffff968716815260208101959095528401929092526060830152909116608082015260a0016100f4565b6101727f000000000000000000000000000000000000000000000000000000000000000081565b61022d600181565b60405190151581526020016100f4565b6101c761030d565b6000805461025290610632565b80601f016020809104026020016040519081016040528092919081815260200182805461027e90610632565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b505050505081565b60008060008060006040517f24e46f7000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000806000806000806000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190610685565b945094509450945094506103c1858584846104ab565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190610685565b939d50919b509950975095506104688a8a89896104ab565b7f00000000000000000000000000000000000000000000000000000000000000006104938a8661070c565b61049d919061075e565b985050505050509091929394565b600083136104e5576040517f56e05d2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8369ffffffffffffffffffff168169ffffffffffffffffffff161080610509575081155b15610540576040517fb1cf675500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60208101600e8310610581577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b600060208083528351808285015260005b818110156105b457858101830151858201604001528201610598565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b69ffffffffffffffffffff8116811461060b57600080fd5b50565b60006020828403121561062057600080fd5b813561062b816105f3565b9392505050565b600181811c9082168061064657607f821691505b60208210810361067f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600080600080600060a0868803121561069d57600080fd5b85516106a8816105f3565b8095505060208601519350604086015192506060860151915060808601516106cf816105f3565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202600082127f800000000000000000000000000000000000000000000000000000000000000084141615610744576107446106dd565b8181058314821517610758576107586106dd565b92915050565b600082610794577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f8000000000000000000000000000000000000000000000000000000000000000831416156107e8576107e86106dd565b50059056fea26469706673582212209d6d206d6197f933b9bc96bf1ed16d11151f4294030d0c80880c5c596dfb7e0764736f6c63430008110033";

type CompositePriceFeedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompositePriceFeedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompositePriceFeed__factory extends ContractFactory {
  constructor(...args: CompositePriceFeedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompositePriceFeed";
  }

  override deploy(
    _targetToBasePriceFeed: PromiseOrValue<string>,
    _baseToUsdPriceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CompositePriceFeed> {
    return super.deploy(
      _targetToBasePriceFeed,
      _baseToUsdPriceFeed,
      overrides || {}
    ) as Promise<CompositePriceFeed>;
  }
  override getDeployTransaction(
    _targetToBasePriceFeed: PromiseOrValue<string>,
    _baseToUsdPriceFeed: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _targetToBasePriceFeed,
      _baseToUsdPriceFeed,
      overrides || {}
    );
  }
  override attach(address: string): CompositePriceFeed {
    return super.attach(address) as CompositePriceFeed;
  }
  override connect(signer: Signer): CompositePriceFeed__factory {
    return super.connect(signer) as CompositePriceFeed__factory;
  }
  static readonly contractName: "CompositePriceFeed";

  public readonly contractName: "CompositePriceFeed";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompositePriceFeedInterface {
    return new utils.Interface(_abi) as CompositePriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompositePriceFeed {
    return new Contract(address, _abi, signerOrProvider) as CompositePriceFeed;
  }
}
