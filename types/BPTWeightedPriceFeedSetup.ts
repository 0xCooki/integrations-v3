/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface BPTWeightedPriceFeedSetupInterface extends utils.Interface {
  functions: {
    "asset0()": FunctionFragment;
    "asset1()": FunctionFragment;
    "asset2()": FunctionFragment;
    "asset3()": FunctionFragment;
    "asset4()": FunctionFragment;
    "asset5()": FunctionFragment;
    "asset6()": FunctionFragment;
    "asset7()": FunctionFragment;
    "balancerPool()": FunctionFragment;
    "balancerVault()": FunctionFragment;
    "normalizedWeight0()": FunctionFragment;
    "normalizedWeight1()": FunctionFragment;
    "normalizedWeight2()": FunctionFragment;
    "normalizedWeight3()": FunctionFragment;
    "normalizedWeight4()": FunctionFragment;
    "normalizedWeight5()": FunctionFragment;
    "normalizedWeight6()": FunctionFragment;
    "normalizedWeight7()": FunctionFragment;
    "numAssets()": FunctionFragment;
    "poolId()": FunctionFragment;
    "priceFeed0()": FunctionFragment;
    "priceFeed1()": FunctionFragment;
    "priceFeed2()": FunctionFragment;
    "priceFeed3()": FunctionFragment;
    "priceFeed4()": FunctionFragment;
    "priceFeed5()": FunctionFragment;
    "priceFeed6()": FunctionFragment;
    "priceFeed7()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "asset0"
      | "asset1"
      | "asset2"
      | "asset3"
      | "asset4"
      | "asset5"
      | "asset6"
      | "asset7"
      | "balancerPool"
      | "balancerVault"
      | "normalizedWeight0"
      | "normalizedWeight1"
      | "normalizedWeight2"
      | "normalizedWeight3"
      | "normalizedWeight4"
      | "normalizedWeight5"
      | "normalizedWeight6"
      | "normalizedWeight7"
      | "numAssets"
      | "poolId"
      | "priceFeed0"
      | "priceFeed1"
      | "priceFeed2"
      | "priceFeed3"
      | "priceFeed4"
      | "priceFeed5"
      | "priceFeed6"
      | "priceFeed7"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "asset0", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset1", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset2", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset3", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset4", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset5", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset6", values?: undefined): string;
  encodeFunctionData(functionFragment: "asset7", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "balancerPool",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "balancerVault",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight2",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight3",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight4",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight5",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight6",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "normalizedWeight7",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "numAssets", values?: undefined): string;
  encodeFunctionData(functionFragment: "poolId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "priceFeed0",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed1",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed2",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed3",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed4",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed5",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed6",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "priceFeed7",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "asset0", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset1", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset2", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset3", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset4", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset5", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset6", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "asset7", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balancerPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balancerVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight0",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight3",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight4",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight5",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight6",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "normalizedWeight7",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "numAssets", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "poolId", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed0", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed1", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed2", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed3", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed4", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed5", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed6", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "priceFeed7", data: BytesLike): Result;

  events: {};
}

export interface BPTWeightedPriceFeedSetup extends BaseContract {
  contractName: "BPTWeightedPriceFeedSetup";

  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BPTWeightedPriceFeedSetupInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    asset0(overrides?: CallOverrides): Promise<[string]>;

    asset1(overrides?: CallOverrides): Promise<[string]>;

    asset2(overrides?: CallOverrides): Promise<[string]>;

    asset3(overrides?: CallOverrides): Promise<[string]>;

    asset4(overrides?: CallOverrides): Promise<[string]>;

    asset5(overrides?: CallOverrides): Promise<[string]>;

    asset6(overrides?: CallOverrides): Promise<[string]>;

    asset7(overrides?: CallOverrides): Promise<[string]>;

    balancerPool(overrides?: CallOverrides): Promise<[string]>;

    balancerVault(overrides?: CallOverrides): Promise<[string]>;

    normalizedWeight0(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight1(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight2(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight3(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight4(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight5(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight6(overrides?: CallOverrides): Promise<[BigNumber]>;

    normalizedWeight7(overrides?: CallOverrides): Promise<[BigNumber]>;

    numAssets(overrides?: CallOverrides): Promise<[BigNumber]>;

    poolId(overrides?: CallOverrides): Promise<[string]>;

    priceFeed0(overrides?: CallOverrides): Promise<[string]>;

    priceFeed1(overrides?: CallOverrides): Promise<[string]>;

    priceFeed2(overrides?: CallOverrides): Promise<[string]>;

    priceFeed3(overrides?: CallOverrides): Promise<[string]>;

    priceFeed4(overrides?: CallOverrides): Promise<[string]>;

    priceFeed5(overrides?: CallOverrides): Promise<[string]>;

    priceFeed6(overrides?: CallOverrides): Promise<[string]>;

    priceFeed7(overrides?: CallOverrides): Promise<[string]>;
  };

  asset0(overrides?: CallOverrides): Promise<string>;

  asset1(overrides?: CallOverrides): Promise<string>;

  asset2(overrides?: CallOverrides): Promise<string>;

  asset3(overrides?: CallOverrides): Promise<string>;

  asset4(overrides?: CallOverrides): Promise<string>;

  asset5(overrides?: CallOverrides): Promise<string>;

  asset6(overrides?: CallOverrides): Promise<string>;

  asset7(overrides?: CallOverrides): Promise<string>;

  balancerPool(overrides?: CallOverrides): Promise<string>;

  balancerVault(overrides?: CallOverrides): Promise<string>;

  normalizedWeight0(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight1(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight2(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight3(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight4(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight5(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight6(overrides?: CallOverrides): Promise<BigNumber>;

  normalizedWeight7(overrides?: CallOverrides): Promise<BigNumber>;

  numAssets(overrides?: CallOverrides): Promise<BigNumber>;

  poolId(overrides?: CallOverrides): Promise<string>;

  priceFeed0(overrides?: CallOverrides): Promise<string>;

  priceFeed1(overrides?: CallOverrides): Promise<string>;

  priceFeed2(overrides?: CallOverrides): Promise<string>;

  priceFeed3(overrides?: CallOverrides): Promise<string>;

  priceFeed4(overrides?: CallOverrides): Promise<string>;

  priceFeed5(overrides?: CallOverrides): Promise<string>;

  priceFeed6(overrides?: CallOverrides): Promise<string>;

  priceFeed7(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    asset0(overrides?: CallOverrides): Promise<string>;

    asset1(overrides?: CallOverrides): Promise<string>;

    asset2(overrides?: CallOverrides): Promise<string>;

    asset3(overrides?: CallOverrides): Promise<string>;

    asset4(overrides?: CallOverrides): Promise<string>;

    asset5(overrides?: CallOverrides): Promise<string>;

    asset6(overrides?: CallOverrides): Promise<string>;

    asset7(overrides?: CallOverrides): Promise<string>;

    balancerPool(overrides?: CallOverrides): Promise<string>;

    balancerVault(overrides?: CallOverrides): Promise<string>;

    normalizedWeight0(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight1(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight2(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight3(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight4(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight5(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight6(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight7(overrides?: CallOverrides): Promise<BigNumber>;

    numAssets(overrides?: CallOverrides): Promise<BigNumber>;

    poolId(overrides?: CallOverrides): Promise<string>;

    priceFeed0(overrides?: CallOverrides): Promise<string>;

    priceFeed1(overrides?: CallOverrides): Promise<string>;

    priceFeed2(overrides?: CallOverrides): Promise<string>;

    priceFeed3(overrides?: CallOverrides): Promise<string>;

    priceFeed4(overrides?: CallOverrides): Promise<string>;

    priceFeed5(overrides?: CallOverrides): Promise<string>;

    priceFeed6(overrides?: CallOverrides): Promise<string>;

    priceFeed7(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    asset0(overrides?: CallOverrides): Promise<BigNumber>;

    asset1(overrides?: CallOverrides): Promise<BigNumber>;

    asset2(overrides?: CallOverrides): Promise<BigNumber>;

    asset3(overrides?: CallOverrides): Promise<BigNumber>;

    asset4(overrides?: CallOverrides): Promise<BigNumber>;

    asset5(overrides?: CallOverrides): Promise<BigNumber>;

    asset6(overrides?: CallOverrides): Promise<BigNumber>;

    asset7(overrides?: CallOverrides): Promise<BigNumber>;

    balancerPool(overrides?: CallOverrides): Promise<BigNumber>;

    balancerVault(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight0(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight1(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight2(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight3(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight4(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight5(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight6(overrides?: CallOverrides): Promise<BigNumber>;

    normalizedWeight7(overrides?: CallOverrides): Promise<BigNumber>;

    numAssets(overrides?: CallOverrides): Promise<BigNumber>;

    poolId(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed0(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed1(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed2(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed3(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed4(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed5(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed6(overrides?: CallOverrides): Promise<BigNumber>;

    priceFeed7(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    asset0(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset1(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset2(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset3(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset4(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset5(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset6(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    asset7(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balancerPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    balancerVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight0(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight1(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight2(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight3(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight4(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight5(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight6(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    normalizedWeight7(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    numAssets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    poolId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed0(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed1(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed2(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed3(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed4(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed5(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed6(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    priceFeed7(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
